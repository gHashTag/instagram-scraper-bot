/**
 * üîç –î–ï–ë–ê–ì –° –ó–ê–ü–ò–°–¨–Æ –í –§–ê–ô–õ (–±–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞)
 */

const fs = require('fs');
const path = require('path');

function log(message) {
  const timestamp = new Date().toLocaleTimeString();
  const logMessage = `[${timestamp}] ${message}\n`;
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
  fs.appendFileSync('debug.log', logMessage);
  
  // –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
  console.log(logMessage.trim());
}

try {
  log('üöÄ –°–¢–ê–†–¢ –î–ï–ë–ê–ì–ê');
  log(`Node.js –≤–µ—Ä—Å–∏—è: ${process.version}`);
  log(`–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${process.platform}`);
  log(`–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${process.cwd()}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º .env
  try {
    require('dotenv').config();
    log('‚úÖ dotenv –∑–∞–≥—Ä—É–∂–µ–Ω');
    log(`DATABASE_URL: ${process.env.DATABASE_URL ? '–ï–°–¢–¨' : '–ù–ï–¢'}`);
    log(`APIFY_TOKEN: ${process.env.APIFY_TOKEN ? '–ï–°–¢–¨' : '–ù–ï–¢'}`);
  } catch (e) {
    log(`‚ùå –û—à–∏–±–∫–∞ dotenv: ${e.message}`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
  try {
    const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    log(`‚úÖ package.json: ${pkg.name} v${pkg.version}`);
  } catch (e) {
    log(`‚ùå –û—à–∏–±–∫–∞ package.json: ${e.message}`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥—É–ª–∏
  try {
    const { neon } = require('@neondatabase/serverless');
    log('‚úÖ @neondatabase/serverless –¥–æ—Å—Ç—É–ø–µ–Ω');
  } catch (e) {
    log(`‚ùå @neondatabase/serverless: ${e.message}`);
  }
  
  log('üéØ –î–ï–ë–ê–ì –ó–ê–í–ï–†–®–ï–ù - –ø—Ä–æ–≤–µ—Ä—å —Ñ–∞–π–ª debug.log');
  
} catch (error) {
  log(`üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${error.message}`);
}
