/**
 * üóëÔ∏è –ü—Ä–æ—Å—Ç–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö reels –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */

const { Pool } = require('pg');
require('dotenv').config();

async function clearReels() {
  console.log('üóëÔ∏è –û–ß–ò–°–¢–ö–ê –í–°–ï–• REELS –ò–ó –ë–ê–ó–´ –î–ê–ù–ù–´–•');
  console.log('===================================\n');

  if (!process.env.DATABASE_URL) {
    console.log('‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
    return;
  }

  const pool = new Pool({
    connectionString: process.env.DATABASE_URL,
    ssl: { rejectUnauthorized: false }
  });

  try {
    const client = await pool.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ reels –¥–æ —É–¥–∞–ª–µ–Ω–∏—è
    const beforeResult = await client.query('SELECT COUNT(*) FROM reels');
    const beforeCount = beforeResult.rows[0].count;
    console.log(`üìä Reels –≤ –±–∞–∑–µ –¥–æ –æ—á–∏—Å—Ç–∫–∏: ${beforeCount}`);
    
    if (beforeCount === '0') {
      console.log('‚úÖ –ë–∞–∑–∞ —É–∂–µ –ø—É—Å—Ç–∞—è - –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å');
      client.release();
      return;
    }
    
    // –£–¥–∞–ª—è–µ–º –í–°–ï reels
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö reels...');
    const deleteResult = await client.query('DELETE FROM reels');
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${deleteResult.rowCount} reels`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∞–∑–∞ –ø—É—Å—Ç–∞—è
    const afterResult = await client.query('SELECT COUNT(*) FROM reels');
    const afterCount = afterResult.rows[0].count;
    console.log(`üìä Reels –≤ –±–∞–∑–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: ${afterCount}`);
    
    if (afterCount === '0') {
      console.log('\nüéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ü–û–õ–ù–û–°–¢–¨–Æ –û–ß–ò–©–ï–ù–ê!');
      console.log('‚úÖ –ì–æ—Ç–æ–≤–∞ –¥–ª—è —Å–≤–µ–∂–µ–≥–æ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞');
    } else {
      console.log('\n‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å reels –≤ –±–∞–∑–µ - –≤–æ–∑–º–æ–∂–Ω–∞ –æ—à–∏–±–∫–∞');
    }
    
    client.release();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã:', error.message);
  } finally {
    await pool.end();
  }
}

clearReels().catch(console.error);
