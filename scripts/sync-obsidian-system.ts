#!/usr/bin/env bun

/**
 * üîÑ –ï–¥–∏–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Obsidian –¥–ª—è Coco Age
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å—é —Å–∏—Å—Ç–µ–º—É Obsidian:
 * - –°–æ–∑–¥–∞–µ—Ç/–æ–±–Ω–æ–≤–ª—è–µ—Ç –≥—Ä–∞—Ñ —Å–≤—è–∑–µ–π
 * - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
 * - –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –æ—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É
 * - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Å–≤—è–∑–µ–π
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * bun run scripts/sync-obsidian-system.ts [project_id]
 * 
 * –ü—Ä–∏–º–µ—Ä:
 * bun run scripts/sync-obsidian-system.ts 1
 */

import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";
import fs from "fs";
import {
  initializeDBConnection,
  closeDBConnection,
  getDB,
} from "../src/db/neonDB";
import {
  reelsTable,
  competitorsTable,
  projectsTable,
  hashtagsTable,
} from "../src/db/schema";
import { eq, and, desc, sql, isNotNull } from "drizzle-orm";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (process.env.NODE_ENV !== 'production') {
  dotenv.config({ path: path.join(__dirname, "../.env.local") }); // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
}
const devEnvPath = path.join(__dirname, "../.env.development");
const prodEnvPath = path.join(__dirname, "../.env");

const dev = fs.existsSync(devEnvPath);
const envPath = dev ? devEnvPath : prodEnvPath;
dotenv.config({ path: envPath });

const vaultPath = process.env.OBSIDIAN_VAULT_PATH;
if (!vaultPath) {
  console.error("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å OBSIDIAN_VAULT_PATH –≤ .env");
  process.exit(1);
}

const obsidianPath: string = vaultPath;

function formatNumber(num: number): string {
  return new Intl.NumberFormat("ru-RU").format(num);
}

function formatPercent(num: number): string {
  return `${(num * 100).toFixed(1)}%`;
}

async function syncObsidianSystem(projectId: number): Promise<void> {
  console.log(`üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã Obsidian –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ ${projectId}...`);

  await initializeDBConnection();
  const db = getDB();

  // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const project = await db.select().from(projectsTable).where(eq(projectsTable.id, projectId)).limit(1);
  
  if (!project.length) {
    console.error(`‚ùå –ü—Ä–æ–µ–∫—Ç —Å ID ${projectId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return;
  }

  console.log(`üìä –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç: ${project[0].name}`);

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const stats = await db
    .select({
      totalReels: sql<number>`count(${reelsTable.id})`,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
      totalLikes: sql<number>`sum(${reelsTable.likes_count})`,
      avgViews: sql<number>`avg(${reelsTable.views_count})`,
      withTranscripts: sql<number>`count(case when ${reelsTable.transcript} is not null then 1 end)`,
      maxViews: sql<number>`max(${reelsTable.views_count})`,
    })
    .from(reelsTable)
    .where(eq(reelsTable.project_id, projectId));

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
  const competitors = await db
    .select({
      id: competitorsTable.id,
      username: competitorsTable.username,
      fullName: competitorsTable.full_name,
      reelsCount: sql<number>`count(${reelsTable.id})`,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
    })
    .from(competitorsTable)
    .leftJoin(reelsTable, and(
      eq(reelsTable.project_id, competitorsTable.project_id),
      eq(reelsTable.source_type, "competitor"),
      eq(reelsTable.source_identifier, sql`${competitorsTable.id}::text`)
    ))
    .where(eq(competitorsTable.project_id, projectId))
    .groupBy(competitorsTable.id, competitorsTable.username, competitorsTable.full_name)
    .orderBy(desc(sql<number>`sum(${reelsTable.views_count})`));

  // –ü–æ–ª—É—á–∞–µ–º —Ö—ç—à—Ç–µ–≥–∏
  const hashtags = await db
    .select({
      id: hashtagsTable.id,
      tagName: hashtagsTable.tag_name,
      reelsCount: sql<number>`count(${reelsTable.id})`,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
    })
    .from(hashtagsTable)
    .leftJoin(reelsTable, and(
      eq(reelsTable.project_id, hashtagsTable.project_id),
      eq(reelsTable.source_type, "hashtag"),
      eq(reelsTable.source_identifier, sql`${hashtagsTable.id}::text`)
    ))
    .where(eq(hashtagsTable.project_id, projectId))
    .groupBy(hashtagsTable.id, hashtagsTable.tag_name)
    .orderBy(desc(sql<number>`sum(${reelsTable.views_count})`));

  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-–∫–æ–Ω—Ç–µ–Ω—Ç —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è–º–∏
  const topContent = await db
    .select({
      url: reelsTable.reel_url,
      author: reelsTable.author_username,
      views: reelsTable.views_count,
      likes: reelsTable.likes_count,
      description: reelsTable.description,
      transcript: reelsTable.transcript,
      audioTitle: reelsTable.audio_title,
    })
    .from(reelsTable)
    .where(and(
      eq(reelsTable.project_id, projectId),
      isNotNull(reelsTable.transcript)
    ))
    .orderBy(desc(reelsTable.views_count))
    .limit(5);

  console.log(`üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`   üì± Reels: ${formatNumber(Number(stats[0].totalReels || 0))}`);
  console.log(`   üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${formatNumber(Number(stats[0].totalViews || 0))}`);
  console.log(`   üéôÔ∏è –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏: ${formatNumber(Number(stats[0].withTranscripts || 0))}`);
  console.log(`   üë• –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã: ${competitors.length}`);
  console.log(`   üè∑Ô∏è –•—ç—à—Ç–µ–≥–∏: ${hashtags.length}`);

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
  await updateObsidianSystem(project[0], stats[0], competitors, hashtags, topContent);

  console.log(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: ${project[0].name}`);
  await closeDBConnection();
}

async function updateObsidianSystem(
  project: any,
  stats: any,
  competitors: any[],
  hashtags: any[],
  topContent: any[]
): Promise<void> {
  const contentFactoryPath = path.join(obsidianPath, "content-factory");
  const cocoAgeDir = path.join(contentFactoryPath, "Coco-Age-Analytics");

  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
  const dirs = [
    cocoAgeDir,
    path.join(cocoAgeDir, "Maps"),
    path.join(cocoAgeDir, "Competitors"),
    path.join(cocoAgeDir, "Hashtags"),
    path.join(cocoAgeDir, "Content-Strategy"),
    path.join(cocoAgeDir, "Analytics"),
    path.join(cocoAgeDir, "Reports"),
  ];

  dirs.forEach(dir => {
    if (!fs.existsSync(dir)) {
      fs.mkdirSync(dir, { recursive: true });
    }
  });

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É
  await updateMainMOC(cocoAgeDir, project, stats, competitors, hashtags);

  // –û–±–Ω–æ–≤–ª—è–µ–º —É–∑–ª—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
  await updateCompetitorNodes(cocoAgeDir, competitors);

  // –û–±–Ω–æ–≤–ª—è–µ–º —É–∑–ª—ã —Ö—ç—à—Ç–µ–≥–æ–≤
  await updateHashtagNodes(cocoAgeDir, hashtags);

  // –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
  await updateAnalyticsNodes(cocoAgeDir, stats, topContent);

  // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç—á–µ—Ç—ã
  await updateReports(cocoAgeDir, project, stats, competitors, hashtags, topContent);

  console.log(`üîÑ –í—Å–µ —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤: ${cocoAgeDir}`);
}

async function updateMainMOC(
  cocoAgeDir: string,
  project: any,
  stats: any,
  competitors: any[],
  hashtags: any[]
): Promise<void> {
  const mocContent = `# ü••‚ú® Coco Age - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞

> **Map of Content (MOC) –¥–ª—è Instagram –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –±—Ä–µ–Ω–¥–∞ Coco Age**

#CocoAge #MOC #Instagram #Analytics #Beauty

**–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** ${new Date().toLocaleString("ru-RU")}

---

## üåü –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å

**–ë—Ä–µ–Ω–¥:** ${project.name}  
**–°—Ñ–µ—Ä–∞:** ${project.industry}  
**–°—Ç–∞—Ç—É—Å:** üü¢ –ê–∫—Ç–∏–≤–µ–Ω

### üìä –°–≤–µ–∂–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- **–ö–æ–Ω—Ç–µ–Ω—Ç-–±–∞–∑–∞:** ${formatNumber(Number(stats.totalReels || 0))} Reels
- **–û–±—â–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Number(stats.totalViews || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
- **AI-–∞–Ω–∞–ª–∏–∑:** ${formatNumber(Number(stats.withTranscripts || 0))} —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π (${formatPercent((Number(stats.withTranscripts || 0) / Number(stats.totalReels || 1)))})
- **–°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Math.round(Number(stats.avgViews || 0)))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤

---

## üó∫Ô∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ

### üë• –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è —Å—Ä–µ–¥–∞ (${competitors.length} –±—Ä–µ–Ω–¥–æ–≤)
${competitors.slice(0, 7).map(comp => 
  `- [[Competitors/${comp.username}|@${comp.username}]] ${comp.fullName ? `(${comp.fullName})` : ""} - ${formatNumber(Number(comp.totalViews || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ #competitor #${comp.username.replace(/[^a-zA-Z0-9]/g, '')}`
).join('\n')}

### üè∑Ô∏è –•—ç—à—Ç–µ–≥-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è (${hashtags.length} —Ç–µ–≥–æ–≤)
${hashtags.slice(0, 10).map(tag => 
  `- [[Hashtags/${tag.tagName}|#${tag.tagName}]] - ${Number(tag.reelsCount || 0)} –ø–æ—Å—Ç–æ–≤, ${formatNumber(Number(tag.totalViews || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ #hashtag #${tag.tagName.replace(/[^a-zA-Z0-9]/g, '')}`
).join('\n')}

### üéØ –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
- [[Content-Strategy/Brand-Positioning|üéØ –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞]] #strategy #positioning
- [[Content-Strategy/Content-Mix|üìÖ –ö–æ–Ω—Ç–µ–Ω—Ç-–º–∏–∫—Å]] #strategy #content
- [[Analytics/Performance-Overview|üìä –û–±–∑–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏]] #analytics #performance

### üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã
- [[Reports/Executive-Summary|üìã –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ]] #report #summary
- [[Reports/Latest-Insights|üí° –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–Ω—Å–∞–π—Ç—ã]] #report #insights

---

## üé® –í–∏–∑—É–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å–≤—è–∑–µ–π

### üîó –û—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Ç–µ—Ä—ã –≤ Graph View
1. **ü•• Coco Age** (—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —É–∑–µ–ª) ‚Üí –°—Ç—Ä–∞—Ç–µ–≥–∏—è ‚Üí –ö–æ–Ω—Ç–µ–Ω—Ç ‚Üí –ê—É–¥–∏—Ç–æ—Ä–∏—è
2. **üë• –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã** ‚Üí –ê–Ω–∞–ª–∏–∑ ‚Üí –ò–Ω—Å–∞–π—Ç—ã ‚Üí –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏  
3. **üè∑Ô∏è –•—ç—à—Ç–µ–≥–∏** ‚Üí –¢—Ä–µ–Ω–¥—ã ‚Üí –û—Ö–≤–∞—Ç ‚Üí –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
4. **üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞** ‚Üí –ú–µ—Ç—Ä–∏–∫–∏ ‚Üí –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ ‚Üí –î–µ–π—Å—Ç–≤–∏—è

### üåê –§–∏–ª—å—Ç—Ä—ã –¥–ª—è Graph View
- \`tag:#CocoAge\` - –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –±—Ä–µ–Ω–¥—É
- \`tag:#competitor\` - –∫–∞—Ä—Ç–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
- \`tag:#hashtag\` - —Ö—ç—à—Ç–µ–≥-—ç–∫–æ—Å–∏—Å—Ç–µ–º–∞
- \`tag:#strategy\` - —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
- \`tag:#analytics\` - –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ

---

## üéØ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É —Å–∏—Å—Ç–µ–º—É

1. **üó∫Ô∏è –ù–∞—á–Ω–∏—Ç–µ –∑–¥–µ—Å—å** - —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Å–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
2. **üîó –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–∞–º** - –∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ –≤–µ–¥–µ—Ç –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É
3. **üìä –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Graph View** - –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
4. **üè∑Ô∏è –§–∏–ª—å—Ç—Ä—É–π—Ç–µ –ø–æ —Ç–µ–≥–∞–º** - –±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
5. **üîÑ –û–±–Ω–æ–≤–ª—è–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ** - —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è

---

*–°–æ–∑–¥–∞–Ω–æ: ${new Date().toLocaleString("ru-RU")}*  
*–°—Ç–∞—Ç—É—Å: üü¢ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é*  
*–°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏*

#CocoAge #MOC #Instagram #Beauty #AntiAge #Updated`;

  const mocPath = path.join(cocoAgeDir, "ü••‚ú® Coco Age - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞.md");
  fs.writeFileSync(mocPath, mocContent, "utf8");
}

async function updateCompetitorNodes(cocoAgeDir: string, competitors: any[]): Promise<void> {
  const competitorsDir = path.join(cocoAgeDir, "Competitors");

  for (const comp of competitors.slice(0, 7)) {
    const competitorContent = `# @${comp.username}

> **–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç –≤ —Å—Ñ–µ—Ä–µ beauty & anti-age**

#competitor #${comp.username.replace(/[^a-zA-Z0-9]/g, '')} #CocoAge #beauty

**–û–±–Ω–æ–≤–ª–µ–Ω–æ:** ${new Date().toLocaleString("ru-RU")}

---

## üìä –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏

**Instagram:** @${comp.username}
**–ü–æ–ª–Ω–æ–µ –∏–º—è:** ${comp.fullName || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
**–ö–æ–Ω—Ç–µ–Ω—Ç:** ${Number(comp.reelsCount || 0)} Reels
**–û–±—â–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Number(comp.totalViews || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
**–°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç:** ${comp.reelsCount > 0 ? formatNumber(Math.round(Number(comp.totalViews || 0) / Number(comp.reelsCount))) : "0"} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤

---

## üîó –°–≤—è–∑–∏ –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ

**–í–æ–∑–≤—Ä–∞—Ç –∫ –∫–∞—Ä—Ç–µ:** [[ü••‚ú® Coco Age - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞|üó∫Ô∏è –ì–ª–∞–≤–Ω–∞—è –∫–∞—Ä—Ç–∞]]

### üí° –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã
- **–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:** ${comp.reelsCount > 0 ? formatNumber(Math.round(Number(comp.totalViews || 0) / Number(comp.reelsCount))) : "0"} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤ —Å—Ä–µ–¥–Ω–µ–º
- **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:** ${Number(comp.reelsCount || 0)} –ø—É–±–ª–∏–∫–∞—Ü–∏–π
- **–ü–æ–∑–∏—Ü–∏—è:** ${Number(comp.totalViews || 0) > 1000000 ? "–¢–æ–ø-–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç" : "–ó–Ω–∞—á–∏–º—ã–π –∏–≥—Ä–æ–∫"}

### üéØ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è Coco Age
- –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
- –í—ã—è–≤–ª–µ–Ω–∏–µ –Ω–µ–æ—Ö–≤–∞—á–µ–Ω–Ω—ã—Ö –Ω–∏—à
- –ò–∑—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

---

*–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${new Date().toLocaleString("ru-RU")}*

#competitor #analysis #CocoAge #updated`;

    const competitorPath = path.join(competitorsDir, `${comp.username}.md`);
    fs.writeFileSync(competitorPath, competitorContent, "utf8");
  }
}

async function updateHashtagNodes(cocoAgeDir: string, hashtags: any[]): Promise<void> {
  const hashtagsDir = path.join(cocoAgeDir, "Hashtags");

  for (const tag of hashtags.slice(0, 10)) {
    const hashtagContent = `# #${tag.tagName}

> **–•—ç—à—Ç–µ–≥ –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ Coco Age**

#hashtag #${tag.tagName.replace(/[^a-zA-Z0-9]/g, '')} #CocoAge #strategy

**–û–±–Ω–æ–≤–ª–µ–Ω–æ:** ${new Date().toLocaleString("ru-RU")}

---

## üìä –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏

**–•—ç—à—Ç–µ–≥:** #${tag.tagName}
**–ö–æ–Ω—Ç–µ–Ω—Ç:** ${Number(tag.reelsCount || 0)} Reels
**–û–±—â–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Number(tag.totalViews || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
**–°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç:** ${tag.reelsCount > 0 ? formatNumber(Math.round(Number(tag.totalViews || 0) / Number(tag.reelsCount))) : "0"} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤

---

## üîó –°–≤—è–∑–∏ –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ

**–í–æ–∑–≤—Ä–∞—Ç –∫ –∫–∞—Ä—Ç–µ:** [[ü••‚ú® Coco Age - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞|üó∫Ô∏è –ì–ª–∞–≤–Ω–∞—è –∫–∞—Ä—Ç–∞]]

### üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è Coco Age
- **–ß–∞—Å—Ç–æ—Ç–∞:** ${tag.reelsCount > 50 ? "–í—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω—ã–π" : tag.reelsCount > 10 ? "–°—Ä–µ–¥–Ω–µ—á–∞—Å—Ç–æ—Ç–Ω—ã–π" : "–ù–∏–∑–∫–æ—á–∞—Å—Ç–æ—Ç–Ω—ã–π"}
- **–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:** ${tag.reelsCount > 0 && (Number(tag.totalViews || 0) / Number(tag.reelsCount)) > 100000 ? "–í—ã—Å–æ–∫–∞—è" : "–°—Ä–µ–¥–Ω—è—è"}
- **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** ${tag.reelsCount > 0 && (Number(tag.totalViews || 0) / Number(tag.reelsCount)) > 100000 ? "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ" : "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ"}

---

*–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${new Date().toLocaleString("ru-RU")}*

#hashtag #strategy #CocoAge #updated`;

    const hashtagPath = path.join(hashtagsDir, `${tag.tagName}.md`);
    fs.writeFileSync(hashtagPath, hashtagContent, "utf8");
  }
}

async function updateAnalyticsNodes(cocoAgeDir: string, stats: any, topContent: any[]): Promise<void> {
  const analyticsDir = path.join(cocoAgeDir, "Analytics");

  const performanceContent = `# üìä –û–±–∑–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ Coco Age

#analytics #performance #CocoAge #metrics

**–û–±–Ω–æ–≤–ª–µ–Ω–æ:** ${new Date().toLocaleString("ru-RU")}

---

## üìà –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏

### üé¨ –ö–æ–Ω—Ç–µ–Ω—Ç-–±–∞–∑–∞
- **–í—Å–µ–≥–æ Reels:** ${formatNumber(Number(stats.totalReels || 0))}
- **–û–±—â–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Number(stats.totalViews || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
- **–û–±—â–∏–µ –ª–∞–π–∫–∏:** ${formatNumber(Number(stats.totalLikes || 0))}
- **–°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Math.round(Number(stats.avgViews || 0)))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤

### ü§ñ AI-–∞–Ω–∞–ª–∏–∑
- **–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π:** ${formatNumber(Number(stats.withTranscripts || 0))}
- **–ü–æ–∫—Ä—ã—Ç–∏–µ:** ${formatPercent((Number(stats.withTranscripts || 0) / Number(stats.totalReels || 1)))}
- **–°—Ç–∞—Ç—É—Å:** ${Number(stats.withTranscripts || 0) > 0 ? "‚úÖ –ê–∫—Ç–∏–≤–Ω–æ" : "üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ"}

---

## üîó –°–≤—è–∑–∏ –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ

**–í–æ–∑–≤—Ä–∞—Ç –∫ –∫–∞—Ä—Ç–µ:** [[ü••‚ú® Coco Age - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞|üó∫Ô∏è –ì–ª–∞–≤–Ω–∞—è –∫–∞—Ä—Ç–∞]]

## üèÜ –¢–æ–ø-–∫–æ–Ω—Ç–µ–Ω—Ç —Å AI-–∞–Ω–∞–ª–∏–∑–æ–º

${topContent.slice(0, 3).map((content, index) => `
### ${index + 1}. ${formatNumber(content.views)} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ - @${content.author}

**–ú–µ—Ç—Ä–∏–∫–∏:** ${formatNumber(content.views)} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, ${formatNumber(content.likes)} –ª–∞–π–∫–æ–≤
**ER:** ${formatPercent((content.likes / content.views) * 100)}

**–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è:** ${content.transcript?.substring(0, 150) || "–í –ø—Ä–æ—Ü–µ—Å—Å–µ"}...
`).join('')}

---

*–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${new Date().toLocaleString("ru-RU")}*

#analytics #performance #CocoAge #updated`;

  const performancePath = path.join(analyticsDir, "Performance-Overview.md");
  fs.writeFileSync(performancePath, performanceContent, "utf8");
}

async function updateReports(
  cocoAgeDir: string,
  project: any,
  stats: any,
  competitors: any[],
  hashtags: any[],
  topContent: any[]
): Promise<void> {
  const reportsDir = path.join(cocoAgeDir, "Reports");

  const summaryContent = `# üìã –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ Coco Age

#report #summary #CocoAge #executive

**–û–±–Ω–æ–≤–ª–µ–Ω–æ:** ${new Date().toLocaleString("ru-RU")}

---

## ü••‚ú® Coco Age: –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å

### üéØ –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞: ‚úÖ –ê–ö–¢–ò–í–ï–ù

---

## üìä –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è

### üíé –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
- **${formatNumber(Number(stats.totalReels || 0))} Instagram Reels** –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ
- **${formatNumber(Number(stats.totalViews || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤** –æ–±—â–∏–π –æ—Ö–≤–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
- **${formatNumber(Number(stats.withTranscripts || 0))} AI-—Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π** –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
- **${competitors.length} –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤** –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–æ
- **${hashtags.length} —Ö—ç—à—Ç–µ–≥–æ–≤** –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ

---

## üîó –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–∏—Å—Ç–µ–º–µ

### üó∫Ô∏è –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞
**[[ü••‚ú® Coco Age - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞|üó∫Ô∏è –ì–ª–∞–≤–Ω–∞—è –∫–∞—Ä—Ç–∞]]** - –Ω–∞—á–Ω–∏—Ç–µ –æ—Ç—Å—é–¥–∞

### üìä –°–≤–µ–∂–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
- [[Analytics/Performance-Overview|üìä –û–±–∑–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏]]
- –°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç: ${formatNumber(Math.round(Number(stats.avgViews || 0)))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
- AI-–ø–æ–∫—Ä—ã—Ç–∏–µ: ${formatPercent((Number(stats.withTranscripts || 0) / Number(stats.totalReels || 1)))}

---

## üöÄ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

### ‚ö° –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
1. **–ö–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è** –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–ø-–ø–æ—Å—Ç–æ–≤
2. **–•—ç—à—Ç–µ–≥-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è** —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ–≥–∏
3. **–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑** –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π

---

*–û—Ç—á–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω: ${new Date().toLocaleString("ru-RU")}*
*–°—Ç–∞—Ç—É—Å: üü¢ –ê–∫—Ç—É–∞–ª–µ–Ω*

**ü••‚ú® –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!**

#report #summary #CocoAge #updated`;

  const summaryPath = path.join(reportsDir, "Executive-Summary.md");
  fs.writeFileSync(summaryPath, summaryContent, "utf8");
}

// –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
const projectId = parseInt(process.argv[2]);
if (!projectId) {
  console.error("‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø—Ä–æ–µ–∫—Ç–∞ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç");
  console.error("–ü—Ä–∏–º–µ—Ä: bun run scripts/sync-obsidian-system.ts 1");
  process.exit(1);
}

// –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
syncObsidianSystem(projectId)
  .then(() => {
    console.log("üéâ –°–∏—Å—Ç–µ–º–∞ Obsidian –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!");
    console.log("üìä –û—Ç–∫—Ä–æ–π—Ç–µ Graph View –≤ Obsidian –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–≤—è–∑–µ–π!");
  })
  .catch((error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:", error);
    process.exit(1);
  });
