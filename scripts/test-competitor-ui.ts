#!/usr/bin/env bun

/**
 * –¢–µ—Å—Ç UI –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É –ø—Ä–æ–µ–∫—Ç–æ–≤
 */

import { NeonAdapter } from "../src/adapters/neon-adapter";

async function testCompetitorUI() {
  console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤...");

  const adapter = new NeonAdapter();

  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–∞–ø—Ç–µ—Ä–∞
    await adapter.initialize();
    console.log("‚úÖ –ê–¥–∞–ø—Ç–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");

    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    const projectId = 6;
    console.log(`üìù –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ ${projectId}...`);

    const competitors = await adapter.getCompetitorsByProjectId(projectId);
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: ${competitors.length}`);

    if (competitors.length === 0) {
      console.log("‚ö†Ô∏è –ù–µ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è UI");
      return;
    }

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–∫–∞–∫ –≤ competitor-wizard-scene.ts)
    console.log("\nüé® –°–∏–º—É–ª—è—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:");
    console.log(
      "–ö–∞–∂–¥—ã–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏:"
    );

    competitors.forEach((competitor, index) => {
      console.log(
        `${index + 1}. @${competitor.username} - ${competitor.instagram_url}`
      );
      console.log(`   –ö–Ω–æ–ø–∫–∏: [üë§ @${competitor.username}] [üóëÔ∏è]`);
      console.log(
        `   Actions: view_competitor_${competitor.id} | delete_competitor_${projectId}_${competitor.username}`
      );
      console.log("");
    });

    console.log("‚úÖ UI –ø–∞—Ç—Ç–µ—Ä–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
    console.log("‚úÖ –ö–∞–∂–¥—ã–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ");
    console.log("‚úÖ –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ª–µ–≤–∞, —É–¥–∞–ª–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∞");
    console.log("‚úÖ –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å —Å –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–æ–≤");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ UI:", error);
  } finally {
    await adapter.close();
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testCompetitorUI().catch(console.error);
