#!/usr/bin/env tsx

/**
 * üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * 
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram –±–æ—Ç
 */

import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";
import fs from "fs";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const devEnvPath = path.join(__dirname, "../.env.development");
const prodEnvPath = path.join(__dirname, "../.env");

const dev = fs.existsSync(devEnvPath);
const envPath = dev ? devEnvPath : prodEnvPath;
dotenv.config({ path: envPath });

interface TelegramMessage {
  chat_id: string;
  text: string;
  parse_mode: string;
  disable_web_page_preview: boolean;
}

async function sendTelegramMessage(message: TelegramMessage): Promise<boolean> {
  const botToken = process.env.TELEGRAM_BOT_TOKEN;
  
  if (!botToken) {
    console.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è");
    return false;
  }

  const url = `https://api.telegram.org/bot${botToken}/sendMessage`;
  
  try {
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(message),
    });

    const result = await response.json();
    
    if (response.ok) {
      console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
      return true;
    } else {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", result);
      return false;
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    return false;
  }
}

async function testTelegramNotification(): Promise<void> {
  console.log("üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...");
  
  const chatId = "144022504"; // –í–∞—à Telegram ID
  
  // –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
  const successMessage: TelegramMessage = {
    chat_id: chatId,
    text: `üîÑ *Coco Age Vault Update - –¢–ï–°–¢*

üìÖ *–î–∞—Ç–∞:* ${new Date().toLocaleString('ru-RU')}
üéØ *–ü—Ä–æ–µ–∫—Ç:* Coco Age (ID: 1)
üìä *–°—Ç–∞—Ç—É—Å:* ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

üìÅ *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ vault:*
‚Ä¢ –§–∞–π–ª–æ–≤: 8
‚Ä¢ –†–∞–∑–º–µ—Ä: 156K

üîó *–ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏:*
‚Ä¢ [–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞](https://github.com/gHashTag/instagram-scraper/blob/main/vaults/coco-age/ü••‚ú®%20Coco%20Age%20-%20–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è%20–∫–∞—Ä—Ç–∞.md)
‚Ä¢ [–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ](https://github.com/gHashTag/instagram-scraper/blob/main/vaults/coco-age/üìä%20–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ%20–∫–æ–Ω—Ç–µ–Ω—Ç–∞.md)
‚Ä¢ [–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã](https://github.com/gHashTag/instagram-scraper/blob/main/vaults/coco-age/üë•%20–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã.md)

ü§ñ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç GitHub Actions`,
    parse_mode: "Markdown",
    disable_web_page_preview: true
  };

  console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏...");
  const success = await sendTelegramMessage(successMessage);
  
  if (success) {
    console.log("‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ—à–µ–ª");
    
    // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    const errorMessage: TelegramMessage = {
      chat_id: chatId,
      text: `üö® *–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Coco Age Vault - –¢–ï–°–¢*

üìÖ *–î–∞—Ç–∞:* ${new Date().toLocaleString('ru-RU')}
‚ùå *–°—Ç–∞—Ç—É—Å:* –¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞
üéØ *–ü—Ä–æ–µ–∫—Ç:* Coco Age

üîç *–î–µ–π—Å—Ç–≤–∏—è:*
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ GitHub Actions
‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

üîó [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏](https://github.com/gHashTag/instagram-scraper/actions)

ü§ñ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ`,
      parse_mode: "Markdown",
      disable_web_page_preview: true
    };

    console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ...");
    const errorSuccess = await sendTelegramMessage(errorMessage);
    
    if (errorSuccess) {
      console.log("‚úÖ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –ø—Ä–æ—à–µ–ª");
    }
  }
  
  console.log("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:");
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${success ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}`);
  console.log(`üö® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: ${success ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}`);
  
  if (success) {
    console.log("\nüéâ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!");
    console.log("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à Telegram –±–æ—Ç neuro_blogger_bot");
  } else {
    console.log("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π");
    console.log("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:");
    console.log("   ‚Ä¢ TELEGRAM_BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ");
    console.log("   ‚Ä¢ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞");
    console.log("   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram API");
  }
}

async function getBotInfo(): Promise<void> {
  const botToken = process.env.TELEGRAM_BOT_TOKEN;
  
  if (!botToken) {
    console.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω");
    return;
  }

  try {
    const response = await fetch(`https://api.telegram.org/bot${botToken}/getMe`);
    const result = await response.json();
    
    if (response.ok) {
      console.log("ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:");
      console.log(`   ‚Ä¢ –ò–º—è: ${result.result.first_name}`);
      console.log(`   ‚Ä¢ Username: @${result.result.username}`);
      console.log(`   ‚Ä¢ ID: ${result.result.id}`);
    } else {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ:", result);
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ:", error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
if (import.meta.url === `file://${process.argv[1]}`) {
  console.log("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π");
  console.log("=" .repeat(50));
  
  getBotInfo().then(() => {
    console.log("=" .repeat(50));
    return testTelegramNotification();
  }).catch((error) => {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", error);
    process.exit(1);
  });
}
