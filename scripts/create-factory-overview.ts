import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";
import fs from "fs";
import {
  initializeDBConnection,
  closeDBConnection,
  getDB,
} from "../src/db/neonDB";
import {
  reelsTable,
  competitorsTable,
  hashtagsTable,
  projectsTable,
} from "../src/db/schema";
import { eq, and, desc, sql } from "drizzle-orm";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const devEnvPath = path.join(__dirname, "../.env.development");
const prodEnvPath = path.join(__dirname, "../.env");

const dev = fs.existsSync(devEnvPath);
const envPath = dev ? devEnvPath : prodEnvPath;
dotenv.config({ path: envPath });

const vaultPath = process.env.OBSIDIAN_VAULT_PATH;
if (!vaultPath) {
  console.error("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å OBSIDIAN_VAULT_PATH –≤ .env");
  process.exit(1);
}

const obsidianPath: string = vaultPath;

function formatNumber(num: number): string {
  return new Intl.NumberFormat("ru-RU").format(num);
}

function formatPercent(num: number): string {
  return `${num.toFixed(2)}%`;
}

async function main() {
  const projectIdArg = process.argv[2];

  if (!projectIdArg) {
    console.error("‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø—Ä–æ–µ–∫—Ç–∞ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç");
    console.error("–ü—Ä–∏–º–µ—Ä: bun run create:overview 1");
    process.exit(1);
  }

  const projectId = parseInt(projectIdArg, 10);

  console.log(
    `üè≠ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—â–µ–≥–æ –æ–±–∑–æ—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç-–∑–∞–≤–æ–¥–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ ${projectId}...`
  );

  await initializeDBConnection();
  const db = getDB();

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
  const project = await db
    .select()
    .from(projectsTable)
    .where(eq(projectsTable.id, projectId))
    .limit(1);

  if (project.length === 0) {
    console.error(`‚ùå –ü—Ä–æ–µ–∫—Ç —Å ID ${projectId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    await closeDBConnection();
    return;
  }

  const projectInfo = project[0];
  console.log(`üìä –°–æ–∑–¥–∞–µ–º –æ–±–∑–æ—Ä –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: ${projectInfo.name}`);

  // –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const totalStats = await db
    .select({
      totalReels: sql<number>`count(${reelsTable.id})`,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
      totalLikes: sql<number>`sum(${reelsTable.likes_count})`,
      avgViews: sql<number>`avg(${reelsTable.views_count})`,
    })
    .from(reelsTable)
    .where(eq(reelsTable.project_id, projectId));

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º
  const competitorCount = await db
    .select({ count: sql<number>`count(*)` })
    .from(competitorsTable)
    .where(eq(competitorsTable.project_id, projectId));

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ö—ç—à—Ç–µ–≥–∞–º
  const hashtagCount = await db
    .select({ count: sql<number>`count(*)` })
    .from(hashtagsTable)
    .where(eq(hashtagsTable.project_id, projectId));

  // –¢–æ–ø-3 –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞
  const topCompetitors = await db
    .select({
      username: competitorsTable.username,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
      reelsCount: sql<number>`count(${reelsTable.id})`,
    })
    .from(competitorsTable)
    .leftJoin(
      reelsTable,
      and(
        eq(reelsTable.project_id, competitorsTable.project_id),
        eq(reelsTable.source_type, "competitor"),
        eq(reelsTable.source_identifier, sql`${competitorsTable.id}::text`)
      )
    )
    .where(eq(competitorsTable.project_id, projectId))
    .groupBy(competitorsTable.id, competitorsTable.username)
    .orderBy(desc(sql<number>`sum(${reelsTable.views_count})`))
    .limit(3);

  // –¢–æ–ø-3 —Ö—ç—à—Ç–µ–≥–∞
  const topHashtags = await db
    .select({
      hashtag: hashtagsTable.tag_name,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
      reelsCount: sql<number>`count(${reelsTable.id})`,
    })
    .from(hashtagsTable)
    .leftJoin(
      reelsTable,
      and(
        eq(reelsTable.project_id, hashtagsTable.project_id),
        eq(reelsTable.source_type, "hashtag"),
        eq(reelsTable.source_identifier, sql`${hashtagsTable.id}::text`)
      )
    )
    .where(eq(hashtagsTable.project_id, projectId))
    .groupBy(hashtagsTable.id, hashtagsTable.tag_name)
    .orderBy(desc(sql<number>`sum(${reelsTable.views_count})`))
    .limit(3);

  const stats = totalStats[0];
  const totalEngagementRate =
    Number(stats.totalViews) > 0
      ? (Number(stats.totalLikes) / Number(stats.totalViews)) * 100
      : 0;

  // –°–æ–∑–¥–∞–µ–º –æ–±–∑–æ—Ä
  const overviewContent = `# üè≠ –ö–û–ù–¢–ï–ù–¢-–ó–ê–í–û–î - –û–±–∑–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞

## üéØ ${projectInfo.name}

> **–ü–æ–ª–Ω—ã–π –æ–±–∑–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏**

**–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:** ${new Date().toLocaleDateString("ru-RU")}  
**–ò–Ω–¥—É—Å—Ç—Ä–∏—è:** ${projectInfo.industry || "–≠—Å—Ç–µ—Ç–∏—á–µ—Å–∫–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞"}

---

## üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê

### üé¨ –ö–æ–Ω—Ç–µ–Ω—Ç
- **–í—Å–µ–≥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π:** ${formatNumber(Number(stats.totalReels || 0))}
- **–û–±—â–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Number(stats.totalViews || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
- **–û–±—â–µ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ:** ${formatNumber(Number(stats.totalLikes || 0))} –ª–∞–π–∫–æ–≤
- **–°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Math.round(Number(stats.avgViews || 0)))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
- **Engagement Rate:** ${formatPercent(totalEngagementRate)}

### üéØ –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
- **–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è:** ${competitorCount[0]?.count || 0}
- **–•—ç—à—Ç–µ–≥–æ–≤ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è:** ${hashtagCount[0]?.count || 0}
- **–ê–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:** ${(competitorCount[0]?.count || 0) + (hashtagCount[0]?.count || 0)}

---

## üèÜ –¢–û–ü-–ò–°–ü–û–õ–ù–ò–¢–ï–õ–ò

### üë• –õ–∏–¥–µ—Ä—ã —Å—Ä–µ–¥–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
${topCompetitors
  .map((competitor, index) => {
    const views = Number(competitor.totalViews || 0);
    const reels = Number(competitor.reelsCount || 0);
    const avgViews = reels > 0 ? Math.round(views / reels) : 0;

    return `${index + 1}. **@${competitor.username}** - ${formatNumber(views)} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ (${reels} –ø—É–±–ª–∏–∫–∞—Ü–∏–π, ~${formatNumber(avgViews)} –≤ —Å—Ä–µ–¥–Ω–µ–º)`;
  })
  .join("\n")}

### üè∑Ô∏è –°–∞–º—ã–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ö—ç—à—Ç–µ–≥–∏
${topHashtags
  .map((hashtag, index) => {
    const views = Number(hashtag.totalViews || 0);
    const reels = Number(hashtag.reelsCount || 0);
    const avgViews = reels > 0 ? Math.round(views / reels) : 0;

    return `${index + 1}. **#${hashtag.hashtag}** - ${formatNumber(views)} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ (${reels} –ø—É–±–ª–∏–∫–∞—Ü–∏–π, ~${formatNumber(avgViews)} –≤ —Å—Ä–µ–¥–Ω–µ–º)`;
  })
  .join("\n")}

---

## üìã –ú–û–î–£–õ–ò –ö–û–ù–¢–ï–ù–¢-–ó–ê–í–û–î–ê

### üèÜ [[competitors/|–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤]]
- **–°—Ç–∞—Ç—É—Å:** ${competitorCount[0]?.count > 0 ? "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" : "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"}
- **–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤:** ${competitorCount[0]?.count || 0}
- **–ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á–µ—Ç:** [[competitors-analysis-${new Date().toISOString().split("T")[0]}|–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –∞–Ω–∞–ª–∏–∑]]

### üè∑Ô∏è [[hashtags/|–ê–Ω–∞–ª–∏–∑ —Ö—ç—à—Ç–µ–≥–æ–≤]]
- **–°—Ç–∞—Ç—É—Å:** ${hashtagCount[0]?.count > 0 ? "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" : "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"}
- **–•—ç—à—Ç–µ–≥–æ–≤:** ${hashtagCount[0]?.count || 0}
- **–ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á–µ—Ç:** [[hashtags-analysis-${new Date().toISOString().split("T")[0]}|–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –∞–Ω–∞–ª–∏–∑]]

### üí° [[insights/|–ò–Ω—Å–∞–π—Ç—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏]]
- **–°—Ç–∞—Ç—É—Å:** üîÑ –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
- **–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã**
- **–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏**

### üé® [[templates/|–®–∞–±–ª–æ–Ω—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞]]
- **–°—Ç–∞—Ç—É—Å:** üîÑ –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
- **–ì–æ—Ç–æ–≤—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã**
- **–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–¥–µ–π**

---

## üéØ –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø

### üìä –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç—ã
\`\`\`bash
# –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
bun run export:report ${projectId}

# –ê–Ω–∞–ª–∏–∑ —Ö—ç—à—Ç–µ–≥–æ–≤
bun run export:hashtags ${projectId}

# –ü—É–±–ª–∏—á–Ω–∞—è –≤–µ—Ä—Å–∏—è
bun run export:public ${projectId}
\`\`\`

### üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
\`\`\`bash
# –ü–æ–ª–Ω–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
bun run auto:update ${projectId}

# –¢–æ–ª—å–∫–æ —Å–∫—Ä–∞–ø–∏–Ω–≥
bun run scrape:bulk ${projectId}
\`\`\`

---

## üìà –ö–õ–Æ–ß–ï–í–´–ï –ú–ï–¢–†–ò–ö–ò

| –ú–µ—Ç—Ä–∏–∫–∞ | –ó–Ω–∞—á–µ–Ω–∏–µ | –°—Ç–∞—Ç—É—Å |
|---------|----------|--------|
| –°—Ä–µ–¥–Ω–∏–π ER | ${formatPercent(totalEngagementRate)} | ${totalEngagementRate > 2 ? "üü¢ –û—Ç–ª–∏—á–Ω–æ" : totalEngagementRate > 1 ? "üü° –•–æ—Ä–æ—à–æ" : "üî¥ –¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è"} |
| –û—Ö–≤–∞—Ç –ª–∏–¥–µ—Ä–∞ | ${formatNumber(Number(topCompetitors[0]?.totalViews || 0))} | ${Number(topCompetitors[0]?.totalViews || 0) > 1000000 ? "üü¢ –í—ã—Å–æ–∫–∏–π" : "üü° –°—Ä–µ–¥–Ω–∏–π"} |
| –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å | ${formatNumber(Number(stats.totalReels || 0))} –ø—É–±–ª–∏–∫–∞—Ü–∏–π | ${Number(stats.totalReels || 0) > 500 ? "üü¢ –í—ã—Å–æ–∫–∞—è" : Number(stats.totalReels || 0) > 100 ? "üü° –°—Ä–µ–¥–Ω—è—è" : "üî¥ –ù–∏–∑–∫–∞—è"} |

---

## üé® –ö–û–ù–¢–ï–ù–¢-–ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–ï

### üìÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –Ω–µ–¥–µ–ª—é
- [ ] –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é **@${topCompetitors[0]?.username || "–ª–∏–¥–µ—Ä–∞"}**
- [ ] –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ö—ç—à—Ç–µ–≥ **#${topHashtags[0]?.hashtag || "—Ç–æ–ø–æ–≤—ã–π"}**
- [ ] –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ —Ç—Ä–µ–Ω–¥–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
- [ ] –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑

### üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
1. **–ò–∑—É—á–µ–Ω–∏–µ –ª–∏–¥–µ—Ä–æ–≤** - –∞–Ω–∞–ª–∏–∑ @${topCompetitors
    .slice(0, 2)
    .map((c) => c.username)
    .join(", @")}
2. **–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ö—ç—à—Ç–µ–≥–∏** - —Ñ–æ–∫—É—Å –Ω–∞ #${topHashtags
    .slice(0, 2)
    .map((h) => h.hashtag)
    .join(", #")}
3. **–ü–æ–≤—ã—à–µ–Ω–∏–µ ER** - —Ü–µ–ª—å –ø—Ä–µ–≤—ã—Å–∏—Ç—å ${formatPercent(totalEngagementRate * 1.2)}
4. **–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –æ—Ö–≤–∞—Ç–∞** - —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ ${formatNumber(Math.round(Number(stats.avgViews || 0) * 1.5))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤ —Å—Ä–µ–¥–Ω–µ–º

---

## üîÑ –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–Ø

### ‚è∞ –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
- ‚úÖ **–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ** –≤ 9:00
- ‚úÖ **–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤** –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
- ‚úÖ **–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ö—ç—à—Ç–µ–≥–æ–≤** –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
- ‚úÖ **–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤** –±–µ–∑ —É—á–∞—Å—Ç–∏—è —á–µ–ª–æ–≤–µ–∫–∞

### üìä –°–ª–µ–¥—É—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
- **–ó–∞–≤—Ç—Ä–∞:** ${new Date(Date.now() + 24 * 60 * 60 * 1000).toLocaleDateString("ru-RU")}
- **–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç:** –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
- **–ú–µ—Å—è—á–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞:** 1 —á–∏—Å–ª–æ

---

## üìû –ü–û–î–î–ï–†–ñ–ö–ê –ò –†–ï–°–£–†–°–´

### üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- [[QUICK_START|–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç]]
- [[AUTOMATION_GUIDE|–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏]]
- [[CURRENT_STATE|–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ]]

### üìä –í–Ω–µ—à–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
- [Instagram Business](https://business.instagram.com)
- [Hashtag Analytics](https://hashtagify.me)
- [Google Trends](https://trends.google.com)

---

*–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date().toLocaleString("ru-RU")}*

**üè≠ –í–∞—à –∫–æ–Ω—Ç–µ–Ω—Ç-–∑–∞–≤–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ–ª–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å!**`;

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–∑–æ—Ä
  const dashboardDir = path.join(obsidianPath, "content-factory", "dashboard");
  fs.mkdirSync(dashboardDir, { recursive: true });

  const overviewFileName = `factory-overview-${projectInfo.name.replace(/[^a-zA-Z0-9]/g, "_")}-${new Date().toISOString().split("T")[0]}.md`;
  const overviewFilePath = path.join(dashboardDir, overviewFileName);

  fs.writeFileSync(overviewFilePath, overviewContent, "utf8");

  console.log(`‚úÖ –û–±–∑–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç-–∑–∞–≤–æ–¥–∞ —Å–æ–∑–¥–∞–Ω: ${overviewFileName}`);
  console.log(`üìÅ –ü—É—Ç—å: ${overviewFilePath}`);
  console.log(`üìä –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: ${competitorCount[0]?.count || 0}`);
  console.log(`üè∑Ô∏è –•—ç—à—Ç–µ–≥–æ–≤: ${hashtagCount[0]?.count || 0}`);
  console.log(`üé¨ –ü—É–±–ª–∏–∫–∞—Ü–∏–π: ${formatNumber(Number(stats.totalReels || 0))}`);

  await closeDBConnection();
}

main().catch(async (err) => {
  console.error("‚ùå –û—à–∏–±–∫–∞:", err);
  await closeDBConnection();
});
