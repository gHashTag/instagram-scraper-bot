import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";
import fs from "fs";
import {
  initializeDBConnection,
  closeDBConnection,
  getDB,
} from "../src/db/neonDB";
import { reelsTable, competitorsTable, projectsTable } from "../src/db/schema";
import { eq, and, desc, sql } from "drizzle-orm";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const devEnvPath = path.join(__dirname, "../.env.development");
const prodEnvPath = path.join(__dirname, "../.env");

const dev = fs.existsSync(devEnvPath);
const envPath = dev ? devEnvPath : prodEnvPath;
dotenv.config({ path: envPath });

const vaultPath = process.env.OBSIDIAN_VAULT_PATH;
if (!vaultPath) {
  console.error("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å OBSIDIAN_VAULT_PATH –≤ .env");
  process.exit(1);
}

// TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ - vaultPath —Ç–æ—á–Ω–æ –Ω–µ undefined –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã—à–µ
const obsidianPath: string = vaultPath;

function formatNumber(num: number): string {
  return new Intl.NumberFormat("ru-RU").format(num);
}

function formatPercent(num: number): string {
  return `${num.toFixed(2)}%`;
}

async function main() {
  const projectIdArg = process.argv[2];

  if (!projectIdArg) {
    console.error("‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø—Ä–æ–µ–∫—Ç–∞ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç");
    console.error("–ü—Ä–∏–º–µ—Ä: bun run export:report 1");
    process.exit(1);
  }

  const projectId = parseInt(projectIdArg, 10);

  console.log(`üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ ${projectId}...`);

  await initializeDBConnection();
  const db = getDB();

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
  const project = await db
    .select()
    .from(projectsTable)
    .where(eq(projectsTable.id, projectId))
    .limit(1);

  if (project.length === 0) {
    console.error(`‚ùå –ü—Ä–æ–µ–∫—Ç —Å ID ${projectId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    await closeDBConnection();
    return;
  }

  const projectInfo = project[0];
  console.log(`üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç: ${projectInfo.name}`);

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º
  const competitorStats = await db
    .select({
      competitorId: competitorsTable.id,
      username: competitorsTable.username,
      fullName: competitorsTable.full_name,
      reelsCount: sql<number>`count(${reelsTable.id})`,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
      totalLikes: sql<number>`sum(${reelsTable.likes_count})`,
      avgViews: sql<number>`avg(${reelsTable.views_count})`,
      maxViews: sql<number>`max(${reelsTable.views_count})`,
    })
    .from(competitorsTable)
    .leftJoin(
      reelsTable,
      and(
        eq(reelsTable.project_id, competitorsTable.project_id),
        eq(reelsTable.source_type, "competitor"),
        eq(reelsTable.source_identifier, sql`${competitorsTable.id}::text`)
      )
    )
    .where(eq(competitorsTable.project_id, projectId))
    .groupBy(
      competitorsTable.id,
      competitorsTable.username,
      competitorsTable.full_name
    )
    .orderBy(desc(sql<number>`sum(${reelsTable.views_count})`));

  // –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const totalStats = await db
    .select({
      totalReels: sql<number>`count(${reelsTable.id})`,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
      totalLikes: sql<number>`sum(${reelsTable.likes_count})`,
      avgViews: sql<number>`avg(${reelsTable.views_count})`,
    })
    .from(reelsTable)
    .where(eq(reelsTable.project_id, projectId));

  const stats = totalStats[0];
  const totalEngagementRate =
    Number(stats.totalViews) > 0
      ? (Number(stats.totalLikes) / Number(stats.totalViews)) * 100
      : 0;

  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-10 reels
  const topReels = await db
    .select({
      authorUsername: reelsTable.author_username,
      viewsCount: reelsTable.views_count,
      likesCount: reelsTable.likes_count,
      audioTitle: reelsTable.audio_title,
      description: reelsTable.description,
      reelUrl: reelsTable.reel_url,
    })
    .from(reelsTable)
    .where(eq(reelsTable.project_id, projectId))
    .orderBy(desc(reelsTable.views_count))
    .limit(10);

  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –æ—Ç—á–µ—Ç
  const reportContent = `# üìä –û–¢–ß–ï–¢ –ü–û –ö–û–ù–ö–£–†–ï–ù–¢–ê–ú

## üéØ –ü–†–û–ï–ö–¢: ${projectInfo.name}

**–î–∞—Ç–∞:** ${new Date().toLocaleDateString("ru-RU")}  
**–ò–Ω–¥—É—Å—Ç—Ä–∏—è:** ${projectInfo.industry || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}

---

## üìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê

- üé¨ **–í—Å–µ–≥–æ Reels:** ${formatNumber(Number(stats.totalReels || 0))}
- üëÄ **–í—Å–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤:** ${formatNumber(Number(stats.totalViews || 0))}
- ‚ù§Ô∏è **–í—Å–µ–≥–æ –ª–∞–π–∫–æ–≤:** ${formatNumber(Number(stats.totalLikes || 0))}
- üìä **–°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã:** ${formatNumber(Math.round(Number(stats.avgViews || 0)))}
- üí´ **Engagement Rate:** ${formatPercent(totalEngagementRate)}
- üë• **–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤:** ${competitorStats.length}

---

## üèÜ –ö–û–ù–ö–£–†–ï–ù–¢–´ (–¢–û–ü –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º)

${competitorStats
  .map((competitor, index) => {
    const reelsCount = Number(competitor.reelsCount || 0);
    const totalViews = Number(competitor.totalViews || 0);
    const totalLikes = Number(competitor.totalLikes || 0);
    const avgViews = Math.round(Number(competitor.avgViews || 0));
    const maxViews = Number(competitor.maxViews || 0);
    const engagementRate = totalViews > 0 ? (totalLikes / totalViews) * 100 : 0;

    return `### ${index + 1}. @${competitor.username || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"}

- üé¨ **Reels:** ${formatNumber(reelsCount)}
- üëÄ **–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:** ${formatNumber(totalViews)}
- ‚ù§Ô∏è **–õ–∞–π–∫–∏:** ${formatNumber(totalLikes)}
- üìä **–°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã:** ${formatNumber(avgViews)}
- üî• **–ú–∞–∫—Å–∏–º—É–º:** ${formatNumber(maxViews)}
- üí´ **ER:** ${formatPercent(engagementRate)}`;
  })
  .join("\n\n")}

---

## üî• –¢–û–ü-10 –õ–£–ß–®–ò–• REELS

${topReels
  .filter((reel) => reel.reelUrl && !reel.reelUrl.includes("test_reel"))
  .slice(0, 10)
  .map((reel, index) => {
    const views = Number(reel.viewsCount || 0);
    const likes = Number(reel.likesCount || 0);
    const engagementRate = views > 0 ? (likes / views) * 100 : 0;

    return `### ${index + 1}. @${reel.authorUsername || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"}

- üëÄ **–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:** ${formatNumber(views)}
- ‚ù§Ô∏è **–õ–∞–π–∫–∏:** ${formatNumber(likes)}
- üí´ **ER:** ${formatPercent(engagementRate)}
- üéµ **–ú—É–∑—ã–∫–∞:** ${reel.audioTitle || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}
- üìù **–û–ø–∏—Å–∞–Ω–∏–µ:** ${reel.description ? reel.description.substring(0, 100) + "..." : "–ù–µ—Ç"}
- üîó **–°—Å—ã–ª–∫–∞:** [–û—Ç–∫—Ä—ã—Ç—å](${reel.reelUrl})`;
  })
  .join("\n\n")}

---

## üí° –í–´–í–û–î–´

### üéØ –õ–∏–¥–µ—Ä —Ä—ã–Ω–∫–∞:
**@${competitorStats[0]?.username || "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"}** - ${formatNumber(Number(competitorStats[0]?.totalViews || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤

### üìä –°—Ä–µ–¥–Ω–∏–π ER –ø–æ —Ä—ã–Ω–∫—É:
${formatPercent(totalEngagementRate)}

### üî• –°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:
${formatNumber(Number(topReels[0]?.viewsCount || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —É @${topReels[0]?.authorUsername || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"}

---

## üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò

1. **–ò–∑—É—á–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ª–∏–¥–µ—Ä–∞:** @${competitorStats[0]?.username || "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"}
2. **–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ø-–∫–æ–Ω—Ç–µ–Ω—Ç** –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ç—Ä–µ–Ω–¥–æ–≤
3. **–°–ª–µ–¥–∏—Ç—å –∑–∞ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º–∏ —Ç—Ä–µ–Ω–¥–∞–º–∏**
4. **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ö–æ–∂–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞**

---

*–û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: ${new Date().toLocaleString("ru-RU")}*`;

  // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
  const projectSlug = projectInfo.name
    .toLowerCase()
    .replace(/[^a-zA-Z0-9]/g, "-");
  const projectDir = path.join(
    obsidianPath,
    "content-factory",
    `project-${projectSlug}`
  );
  const reportsDir = path.join(projectDir, "reports");

  fs.mkdirSync(reportsDir, { recursive: true });

  const reportFileName = `competitors-analysis-${new Date().toISOString().split("T")[0]}.md`;
  const reportFilePath = path.join(reportsDir, reportFileName);

  fs.writeFileSync(reportFilePath, reportContent, "utf8");

  console.log(`‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: ${reportFileName}`);
  console.log(`üìÅ –ü—É—Ç—å: ${reportFilePath}`);
  console.log(`üìä –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: ${competitorStats.length}`);
  console.log(`üé¨ Reels: ${formatNumber(Number(stats.totalReels || 0))}`);

  await closeDBConnection();
}

main().catch(async (err) => {
  console.error("‚ùå –û—à–∏–±–∫–∞:", err);
  await closeDBConnection();
});
