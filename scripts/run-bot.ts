/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ Instagram Scraper Bot
 *
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–≥–∏ –µ–≥–æ —Ä–∞–±–æ—Ç—ã.
 */

import { Telegraf, session } from "telegraf";
import dotenv from "dotenv";
import { NeonAdapter } from "../src/adapters/neon-adapter";
import { setupInstagramScraperBot, createScenesStage } from "../index";
import { ScraperBotContext, StorageAdapter } from "../src/types";
import { projectContextMiddleware } from "../src/middleware/project-context-middleware";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// Middleware –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏–∏ (–∏–∑ src/bot.ts)
async function ensureUserMiddleware(
  ctx: ScraperBotContext,
  next: () => Promise<void>
) {
  console.log("[DEBUG] ensureUserMiddleware: –ó–∞–ø—É—Å–∫...");
  if (!ctx.from?.id) {
    console.warn("[DEBUG] ensureUserMiddleware: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–∑ ctx.from.id.");
    return;
  }
  const telegramId = ctx.from.id;
  console.log(
    `[DEBUG] ensureUserMiddleware: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}.`
  );
  if (!ctx.storage) {
    console.error(
      "[ERROR] ensureUserMiddleware: Middleware –≤—ã–∑–≤–∞–Ω–æ –¥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ctx.storage"
    );
    // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ
    if (ctx.reply) {
      await ctx
        .reply(
          "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        .catch(() => {});
    }
    return;
  }
  try {
    console.log(
      `[DEBUG] ensureUserMiddleware: –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}...`
    );
    let user = await ctx.storage.getUserByTelegramId(telegramId);
    if (!user) {
      console.log(
        `[INFO] ensureUserMiddleware: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è...`
      );
      const username =
        ctx.from.username || ctx.from.first_name || `User_${telegramId}`;
      console.log(
        `[DEBUG] ensureUserMiddleware: –í—ã–∑–æ–≤ createUser –¥–ª—è ${telegramId} —Å username \"${username}\"...`
      );
      user = await ctx.storage.createUser(
        telegramId,
        username,
        ctx.from.first_name,
        ctx.from.last_name,
        ctx.from.is_bot,
        ctx.from.language_code
      );
      if (user) {
        console.log(
          `[INFO] ensureUserMiddleware: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} (${username}) —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. ID –≤ –±–∞–∑–µ: ${user.id}`
        );
      } else {
        console.error(
          `[ERROR] ensureUserMiddleware: createUser –¥–ª—è ${telegramId} –≤–µ—Ä–Ω—É–ª ${user}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï —Å–æ–∑–¥–∞–Ω.`
        );
        if (ctx.reply) {
          await ctx
            .reply(
              "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∞—à—É —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            .catch(() => {});
        }
        return;
      }
    } else {
      console.log(
        `[INFO] ensureUserMiddleware: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} (${user.username || "–±–µ–∑ username"}) –Ω–∞–π–¥–µ–Ω. ID –≤ –±–∞–∑–µ: ${user.id}.`
      );
    }
    console.log(
      `[DEBUG] ensureUserMiddleware: –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ ctx.session.user –¥–ª—è ${telegramId}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:`,
      JSON.stringify(user)
    );
    if (!ctx.session) {
      console.warn(
        "[DEBUG] ensureUserMiddleware: ctx.session –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–¥ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ–º user, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º."
      );
      ctx.session = {};
    }
    ctx.session.user = user;
    console.log(
      `[DEBUG] ensureUserMiddleware: ctx.session.user —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –¥–ª—è ${telegramId}.`
    );
  } catch (error) {
    console.error(
      `[ERROR] ensureUserMiddleware: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ/—Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}:`,
      error
    );
    if (ctx.reply) {
      await ctx
        .reply(
          "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        .catch(() => {});
    }
    return;
  }
  console.log(
    `[DEBUG] ensureUserMiddleware: –í—ã–∑–æ–≤ next() –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}.`
  );
  return next();
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
const token = process.env.BOT_TOKEN;
if (!token) {
  console.error(
    "‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ (BOT_TOKEN) –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."
  );
  console.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –≤ —Ñ–∞–π–ª .env");
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
console.log("ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞...");
const bot = new Telegraf<ScraperBotContext>(token);

// –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è —Å–µ—Å—Å–∏–π
console.log("‚öôÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ middleware –¥–ª—è —Å–µ—Å—Å–∏–π...");
bot.use(session());

// –°–æ–∑–¥–∞–µ–º –∞–¥–∞–ø—Ç–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
console.log("üíæ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö...");
const storageAdapter = new NeonAdapter();

// <<< –í–ê–ñ–ù–û: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–¥–∞–ø—Ç–µ—Ä –î–û –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ middleware >>>
await storageAdapter.initialize();
console.log("‚úÖ –ê–¥–∞–ø—Ç–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.");

// –î–æ–±–∞–≤–ª—è–µ–º storage –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
console.log("‚öôÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è middleware –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è storageAdapter –≤ ctx...");
bot.use((ctx, next) => {
  ctx.storage = storageAdapter as StorageAdapter;
  return next();
});

// –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
console.log("‚öôÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ensureUserMiddleware...");
bot.use(ensureUserMiddleware);

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º middleware
console.log("‚öôÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è projectContextMiddleware...");
bot.use(projectContextMiddleware);

// –°–æ–∑–¥–∞–µ–º stage —Å–æ —Å—Ü–µ–Ω–∞–º–∏
console.log("‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ Stage —Å–æ —Å—Ü–µ–Ω–∞–º–∏...");
const stage = createScenesStage(storageAdapter);

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Stage middleware
console.log("‚öôÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Stage middleware...");
bot.use(stage.middleware());

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥—É–ª—å Instagram Scraper Bot
console.log(
  "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª—è Instagram Scraper Bot (–∫–æ–º–∞–Ω–¥—ã, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)..."
);
const scraperBot = setupInstagramScraperBot(bot, storageAdapter, {
  telegramBotToken: token,
  apifyToken: process.env.APIFY_TOKEN || "",
  openaiApiKey: process.env.OPENAI_API_KEY || "",
  adminUserId: parseInt(process.env.ADMIN_USER_ID || "0"),
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.start(async (ctx) => {
  console.log(
    `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.username || ctx.from.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞`
  );

  try {
    if (!ctx.session) {
      console.error(
        "‚ùå –û—à–∏–±–∫–∞: ctx.session –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ /start –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ."
      );
      await ctx.reply(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Å—Å–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–ª–æ–≥."
      );
      return;
    }
    const user = ctx.session.user;

    if (!user) {
      console.error(
        "‚ùå –û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ ensureUserMiddleware"
      );
      await ctx.reply(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å —Å–µ—Å—Å–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
      );
      return;
    }

    await ctx.reply(
      `–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${user.first_name || user.username || "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}! üëã\n\n–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?`
    );

    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", {
      reply_markup: {
        keyboard: scraperBot.getMenuButtons(),
        resize_keyboard: true,
      },
    });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start:", error);
    await ctx.reply(
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.help(async (ctx) => {
  await ctx.reply(
    "–Ø Instagram Scraper Bot. –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n" +
      "üìä /projects - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏\n" +
      "üîç /competitors - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏\n" +
      "#Ô∏è‚É£ /hashtags - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ö—ç—à—Ç–µ–≥–∞–º–∏\n" +
      "üé¨ /scrape - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∞–ø–∏–Ω–≥\n" +
      "üëÄ /reels - –ü—Ä–æ—Å–º–æ—Ç—Ä Reels\n" +
      "üìà /analytics - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n" +
      "üîî /notifications - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n" +
      "üìã /collections - –ö–æ–ª–ª–µ–∫—Ü–∏–∏ Reels\n" +
      "ü§ñ /chatbot - –ß–∞—Ç-–±–æ—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –≤–∏–¥–µ–æ"
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${ctx.updateType}:`, err);
  ctx.reply("–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.");
});

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –º–µ–Ω—é –±–æ—Ç–∞
console.log("üìã –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –º–µ–Ω—é –±–æ—Ç–∞...");
bot.telegram
  .setMyCommands(scraperBot.getCommands())
  .then(() => {
    console.log("‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –º–µ–Ω—é –±–æ—Ç–∞!");
  })
  .catch((err) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥ –≤ –º–µ–Ω—é –±–æ—Ç–∞:", err);
  });

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
console.log("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...");
bot
  .launch()
  .then(() => {
    console.log("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!");
    console.log("üìù –õ–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞:");
  })
  .catch((err) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", err);
    process.exit(1);
  });

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
process.once("SIGINT", async () => {
  console.log("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...");
  try {
    await storageAdapter.close();
    console.log("üíæ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö:", error);
  }
  bot.stop("SIGINT");
});

process.once("SIGTERM", async () => {
  console.log("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...");
  try {
    await storageAdapter.close();
    console.log("üíæ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö:", error);
  }
  bot.stop("SIGTERM");
});
