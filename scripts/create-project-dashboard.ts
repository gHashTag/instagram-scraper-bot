import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";
import fs from "fs";
import {
  initializeDBConnection,
  closeDBConnection,
  getDB,
} from "../src/db/neonDB";
import {
  reelsTable,
  competitorsTable,
  hashtagsTable,
  projectsTable,
} from "../src/db/schema";
import { eq, and, desc, sql } from "drizzle-orm";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const devEnvPath = path.join(__dirname, "../.env.development");
const prodEnvPath = path.join(__dirname, "../.env");

const dev = fs.existsSync(devEnvPath);
const envPath = dev ? devEnvPath : prodEnvPath;
dotenv.config({ path: envPath });

const vaultPath = process.env.OBSIDIAN_VAULT_PATH;
if (!vaultPath) {
  console.error("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å OBSIDIAN_VAULT_PATH –≤ .env");
  process.exit(1);
}

const obsidianPath: string = vaultPath;

function formatNumber(num: number): string {
  return new Intl.NumberFormat("ru-RU").format(num);
}

function formatPercent(num: number): string {
  return `${num.toFixed(2)}%`;
}

async function main() {
  const projectIdArg = process.argv[2];

  if (!projectIdArg) {
    console.error("‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø—Ä–æ–µ–∫—Ç–∞ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç");
    console.error("–ü—Ä–∏–º–µ—Ä: bun run create:dashboard 1");
    process.exit(1);
  }

  const projectId = parseInt(projectIdArg, 10);

  console.log(`üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ ${projectId}...`);

  await initializeDBConnection();
  const db = getDB();

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
  const project = await db
    .select()
    .from(projectsTable)
    .where(eq(projectsTable.id, projectId))
    .limit(1);

  if (project.length === 0) {
    console.error(`‚ùå –ü—Ä–æ–µ–∫—Ç —Å ID ${projectId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    await closeDBConnection();
    return;
  }

  const projectInfo = project[0];
  console.log(`üìä –°–æ–∑–¥–∞–µ–º –¥–∞—à–±–æ—Ä–¥ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: ${projectInfo.name}`);

  // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const totalStats = await db
    .select({
      totalReels: sql<number>`count(${reelsTable.id})`,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
      totalLikes: sql<number>`sum(${reelsTable.likes_count})`,
      avgViews: sql<number>`avg(${reelsTable.views_count})`,
    })
    .from(reelsTable)
    .where(eq(reelsTable.project_id, projectId));

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º
  const competitorStats = await db
    .select({
      totalCompetitors: sql<number>`count(${competitorsTable.id})`,
      competitorReels: sql<number>`count(${reelsTable.id})`,
      competitorViews: sql<number>`sum(${reelsTable.views_count})`,
    })
    .from(competitorsTable)
    .leftJoin(
      reelsTable,
      and(
        eq(reelsTable.project_id, competitorsTable.project_id),
        eq(reelsTable.source_type, "competitor"),
        eq(reelsTable.source_identifier, sql`${competitorsTable.id}::text`)
      )
    )
    .where(eq(competitorsTable.project_id, projectId));

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ö—ç—à—Ç–µ–≥–∞–º
  const hashtagStats = await db
    .select({
      totalHashtags: sql<number>`count(${hashtagsTable.id})`,
      hashtagReels: sql<number>`count(${reelsTable.id})`,
      hashtagViews: sql<number>`sum(${reelsTable.views_count})`,
    })
    .from(hashtagsTable)
    .leftJoin(
      reelsTable,
      and(
        eq(reelsTable.project_id, hashtagsTable.project_id),
        eq(reelsTable.source_type, "hashtag"),
        eq(reelsTable.source_identifier, sql`${hashtagsTable.id}::text`)
      )
    )
    .where(eq(hashtagsTable.project_id, projectId));

  const stats = totalStats[0];
  const compStats = competitorStats[0];
  const hashStats = hashtagStats[0];

  const totalEngagementRate =
    Number(stats.totalViews) > 0
      ? (Number(stats.totalLikes) / Number(stats.totalViews)) * 100
      : 0;

  // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
  const projectSlug = (() => {
    function slugify(str: string, fallbackId: number): string {
      // –ü—Ä–æ—Å—Ç–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞
      const map: Record<string, string> = {
        –∞: "a",
        –±: "b",
        –≤: "v",
        –≥: "g",
        –¥: "d",
        –µ: "e",
        —ë: "e",
        –∂: "zh",
        –∑: "z",
        –∏: "i",
        –π: "y",
        –∫: "k",
        –ª: "l",
        –º: "m",
        –Ω: "n",
        –æ: "o",
        –ø: "p",
        —Ä: "r",
        —Å: "s",
        —Ç: "t",
        —É: "u",
        —Ñ: "f",
        —Ö: "h",
        —Ü: "c",
        —á: "ch",
        —à: "sh",
        —â: "shch",
        —ä: "",
        —ã: "y",
        —å: "",
        —ç: "e",
        —é: "yu",
        —è: "ya",
      };

      const transliterated = str
        .split("")
        .map((ch) => {
          const lower = ch.toLowerCase();
          if (map[lower]) {
            return map[lower];
          }
          // Latin letters and numbers
          if (/[a-z0-9]/i.test(ch)) return ch;
          return "-"; // –∑–∞–º–µ–Ω—è–µ–º –≤—Å–µ –ø—Ä–æ—á–∏–µ —Å–∏–º–≤–æ–ª—ã –Ω–∞ —Ç–∏—Ä–µ
        })
        .join("");

      let slug = transliterated
        .toLowerCase()
        .replace(/[^a-z0-9]+/g, "-") // –ª—é–±—ã–µ –≥—Ä—É–ø–ø—ã —Å–∏–º–≤–æ–ª–æ–≤, –Ω–µ —è–≤–ª—è—é—â–∏—Ö—Å—è –ª–∞—Ç–∏–Ω–∏—Ü–µ–π/—Ü–∏—Ñ—Ä–∞–º–∏ -> "-"
        .replace(/^-+|-+$/g, "") // –æ–±—Ä–µ–∑–∞–µ–º –≤–µ–¥—É—â–∏–µ/–∑–∞–º—ã–∫–∞—é—â–∏–µ —Ç–∏—Ä–µ
        .replace(/-+/g, "-"); // —Å—Ö–ª–æ–ø—ã–≤–∞–µ–º –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏–µ —Ç–∏—Ä–µ

      if (!slug) {
        slug = String(fallbackId);
      }
      return slug;
    }

    return slugify(projectInfo.name, projectId);
  })();
  const projectDir = path.join(
    obsidianPath,
    "content-factory",
    `project-${projectSlug}`
  );

  fs.mkdirSync(projectDir, { recursive: true });

  // –°–æ–∑–¥–∞–µ–º –¥–∞—à–±–æ—Ä–¥
  const dashboardContent = `# üè≠ –ö–û–ù–¢–ï–ù–¢-–ó–ê–í–û–î: ${projectInfo.name}

> **–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ –ø—Ä–æ–µ–∫—Ç–∞**  
> –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date().toLocaleString("ru-RU")}

---

## üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–ï–ö–¢–ê

| –ú–µ—Ç—Ä–∏–∫–∞ | –ó–Ω–∞—á–µ–Ω–∏–µ |
|---------|----------|
| üé¨ **–í—Å–µ–≥–æ Reels** | ${formatNumber(Number(stats.totalReels || 0))} |
| üëÄ **–û–±—â–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã** | ${formatNumber(Number(stats.totalViews || 0))} |
| ‚ù§Ô∏è **–û–±—â–∏–µ –ª–∞–π–∫–∏** | ${formatNumber(Number(stats.totalLikes || 0))} |
| üìä **–°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã** | ${formatNumber(Math.round(Number(stats.avgViews || 0)))} |
| üí´ **Engagement Rate** | ${formatPercent(totalEngagementRate)} |

---

## üéØ –ú–û–î–£–õ–ò –ê–ù–ê–õ–ò–ó–ê

### üë• –ö–û–ù–ö–£–†–ï–ù–¢–´
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** ${Number(compStats.totalCompetitors || 0)} –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
- **Reels:** ${formatNumber(Number(compStats.competitorReels || 0))}
- **–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:** ${formatNumber(Number(compStats.competitorViews || 0))}

üìÅ **–û—Ç—á–µ—Ç—ã:** [[competitors/]]
- [[competitors/competitors-analysis-${new Date().toISOString().split("T")[0]}.md|–ü–æ—Å–ª–µ–¥–Ω–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤]]

### üè∑Ô∏è –•–≠–®–¢–ï–ì–ò
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** ${Number(hashStats.totalHashtags || 0)} —Ö—ç—à—Ç–µ–≥–æ–≤
- **Reels:** ${formatNumber(Number(hashStats.hashtagReels || 0))}
- **–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:** ${formatNumber(Number(hashStats.hashtagViews || 0))}

üìÅ **–û—Ç—á–µ—Ç—ã:** [[hashtags/]]
- [[hashtags/hashtags-analysis-${new Date().toISOString().split("T")[0]}.md|–ü–æ—Å–ª–µ–¥–Ω–∏–π –∞–Ω–∞–ª–∏–∑ —Ö—ç—à—Ç–µ–≥–æ–≤]]

---

## üöÄ –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø

### üìä –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç—ã
\`\`\`bash
# –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
bun run export:report ${projectId}

# –ê–Ω–∞–ª–∏–∑ —Ö—ç—à—Ç–µ–≥–æ–≤  
bun run export:hashtags ${projectId}

# –ü—É–±–ª–∏—á–Ω—ã–π –æ—Ç—á–µ—Ç
bun run export:public ${projectId}
\`\`\`

### üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
\`\`\`bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
bun run auto:update ${projectId}

# –°–∫—Ä–∞–ø–∏–Ω–≥ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
bun run scrape:bulk ${projectId}
\`\`\`

---

## üìà –¢–†–ï–ù–î–´ –ò –ò–ù–°–ê–ô–¢–´

### üéØ –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
- **–õ—É—á—à–∏–π ER:** ${formatPercent(totalEngagementRate)}
- **–°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Math.round(Number(stats.avgViews || 0)))}
- **–û–±—â–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Number(stats.totalViews || 0))}

### üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- **–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã:** ${Math.round((Number(compStats.competitorReels || 0) / Number(stats.totalReels || 1)) * 100)}%
- **–•—ç—à—Ç–µ–≥–∏:** ${Math.round((Number(hashStats.hashtagReels || 0) / Number(stats.totalReels || 1)) * 100)}%

---

## üìÅ –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê

\`\`\`
project-${projectSlug}/
‚îú‚îÄ‚îÄ üìä dashboard.md (—ç—Ç–æ—Ç —Ñ–∞–π–ª)
‚îú‚îÄ‚îÄ üë• competitors/
‚îÇ   ‚îî‚îÄ‚îÄ competitors-analysis-YYYY-MM-DD.md
‚îú‚îÄ‚îÄ üè∑Ô∏è hashtags/
‚îÇ   ‚îî‚îÄ‚îÄ hashtags-analysis-YYYY-MM-DD.md
‚îî‚îÄ‚îÄ üìã reports/
    ‚îî‚îÄ‚îÄ archived-reports/
\`\`\`

---

## üéØ –ü–õ–ê–ù –†–ê–ó–í–ò–¢–ò–Ø

### ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ
- [x] –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
- [x] –ê–Ω–∞–ª–∏–∑ —Ö—ç—à—Ç–µ–≥–æ–≤  
- [x] –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã
- [x] –ü—É–±–ª–∏—á–Ω—ã–µ –≤–µ—Ä—Å–∏–∏

### üîÑ –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
- [ ] –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –º—É–∑—ã–∫–∏
- [ ] –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∏—Ä—É—Å–Ω–æ—Å—Ç–∏
- [ ] A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- [ ] –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º

---

## üìû –ö–û–ù–¢–ê–ö–¢–´ –ò –ü–û–î–î–ï–†–ñ–ö–ê

**–ü—Ä–æ–µ–∫—Ç:** ${projectInfo.name}  
**–ò–Ω–¥—É—Å—Ç—Ä–∏—è:** ${projectInfo.industry || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}  
**–°–æ–∑–¥–∞–Ω:** ${new Date(projectInfo.created_at).toLocaleDateString("ru-RU")}

---

*–î–∞—à–±–æ—Ä–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤*`;

  const dashboardPath = path.join(projectDir, "dashboard.md");
  fs.writeFileSync(dashboardPath, dashboardContent, "utf8");

  // –°–æ–∑–¥–∞–µ–º README –¥–ª—è –æ–±—â–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è
  const readmeContent = `# üìñ README: –ü—Ä–æ–µ–∫—Ç ${projectInfo.name}

## üéØ –û–ø–∏—Å–∞–Ω–∏–µ
–ö–æ–Ω—Ç–µ–Ω—Ç-–∑–∞–≤–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ —Ö—ç—à—Ç–µ–≥–æ–≤ –≤ —Å—Ñ–µ—Ä–µ ${projectInfo.industry || "—ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã"}.

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞
- **dashboard.md** - –≥–ª–∞–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ –ø—Ä–æ–µ–∫—Ç–∞
- **competitors/** - –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
- **hashtags/** - –∞–Ω–∞–ª–∏–∑ —Ö—ç—à—Ç–µ–≥–æ–≤
- **reports/** - –∞—Ä—Ö–∏–≤ –æ—Ç—á–µ—Ç–æ–≤

## üöÄ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
1. –û—Ç–∫—Ä–æ–π—Ç–µ [[dashboard.md]] –¥–ª—è –æ–±—â–µ–≥–æ –æ–±–∑–æ—Ä–∞
2. –ò–∑—É—á–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç—á–µ—Ç—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–∞–ø–∫–∞—Ö
3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –¥–∞—à–±–æ—Ä–¥–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö

## üìä –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
–û—Ç—á–µ—Ç—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00 —É—Ç—Ä–∞.

---
*–°–æ–∑–¥–∞–Ω–æ: ${new Date().toLocaleString("ru-RU")}*`;

  const readmePath = path.join(projectDir, "README.md");
  fs.writeFileSync(readmePath, readmeContent, "utf8");

  console.log(`‚úÖ –î–∞—à–±–æ—Ä–¥ —Å–æ–∑–¥–∞–Ω: dashboard.md`);
  console.log(`üìÅ –ü—É—Ç—å: ${dashboardPath}`);
  console.log(
    `üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${formatNumber(Number(stats.totalReels || 0))} Reels`
  );
  console.log(`üë• –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: ${Number(compStats.totalCompetitors || 0)}`);
  console.log(`üè∑Ô∏è –•—ç—à—Ç–µ–≥–æ–≤: ${Number(hashStats.totalHashtags || 0)}`);

  await closeDBConnection();
}

main().catch(async (err) => {
  console.error("‚ùå –û—à–∏–±–∫–∞:", err);
  await closeDBConnection();
});
