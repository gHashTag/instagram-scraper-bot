import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";
import fs from "fs";
import {
  initializeDBConnection,
  closeDBConnection,
  getDB,
} from "../src/db/neonDB";
import { reelsTable, competitorsTable, projectsTable } from "../src/db/schema";
import { eq, and, desc, sql } from "drizzle-orm";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const devEnvPath = path.join(__dirname, "../.env.development");
const prodEnvPath = path.join(__dirname, "../.env");

const dev = fs.existsSync(devEnvPath);
const envPath = dev ? devEnvPath : prodEnvPath;
dotenv.config({ path: envPath });

const publicPath = process.env.PUBLIC_REPORTS_PATH;
if (!publicPath) {
  console.error("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å PUBLIC_REPORTS_PATH –≤ .env");
  process.exit(1);
}

const publicReportsPath: string = publicPath;

function formatNumber(num: number): string {
  return new Intl.NumberFormat("ru-RU").format(num);
}

function formatPercent(num: number): string {
  return `${num.toFixed(2)}%`;
}

function maskCompetitorName(username: string): string {
  // –ú–∞—Å–∫–∏—Ä—É–µ–º –∏–º–µ–Ω–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–π –≤–µ—Ä—Å–∏–∏
  if (username.length <= 3) return "***";
  return (
    username.substring(0, 2) +
    "*".repeat(username.length - 4) +
    username.substring(username.length - 2)
  );
}

async function main() {
  const projectIdArg = process.argv[2];

  if (!projectIdArg) {
    console.error("‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø—Ä–æ–µ–∫—Ç–∞ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç");
    console.error("–ü—Ä–∏–º–µ—Ä: bun run export:public 1");
    process.exit(1);
  }

  const projectId = parseInt(projectIdArg, 10);

  console.log(`üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ ${projectId}...`);

  await initializeDBConnection();
  const db = getDB();

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
  const project = await db
    .select()
    .from(projectsTable)
    .where(eq(projectsTable.id, projectId))
    .limit(1);

  if (project.length === 0) {
    console.error(`‚ùå –ü—Ä–æ–µ–∫—Ç —Å ID ${projectId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    await closeDBConnection();
    return;
  }

  const projectInfo = project[0];
  console.log(`üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç: ${projectInfo.name}`);

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º
  const competitorStats = await db
    .select({
      competitorId: competitorsTable.id,
      username: competitorsTable.username,
      fullName: competitorsTable.full_name,
      reelsCount: sql<number>`count(${reelsTable.id})`,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
      totalLikes: sql<number>`sum(${reelsTable.likes_count})`,
      avgViews: sql<number>`avg(${reelsTable.views_count})`,
      maxViews: sql<number>`max(${reelsTable.views_count})`,
    })
    .from(competitorsTable)
    .leftJoin(
      reelsTable,
      and(
        eq(reelsTable.project_id, competitorsTable.project_id),
        eq(reelsTable.source_type, "competitor"),
        eq(reelsTable.source_identifier, sql`${competitorsTable.id}::text`)
      )
    )
    .where(eq(competitorsTable.project_id, projectId))
    .groupBy(
      competitorsTable.id,
      competitorsTable.username,
      competitorsTable.full_name
    )
    .orderBy(desc(sql<number>`sum(${reelsTable.views_count})`));

  // –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const totalStats = await db
    .select({
      totalReels: sql<number>`count(${reelsTable.id})`,
      totalViews: sql<number>`sum(${reelsTable.views_count})`,
      totalLikes: sql<number>`sum(${reelsTable.likes_count})`,
      avgViews: sql<number>`avg(${reelsTable.views_count})`,
    })
    .from(reelsTable)
    .where(eq(reelsTable.project_id, projectId));

  const stats = totalStats[0];
  const totalEngagementRate =
    Number(stats.totalViews) > 0
      ? (Number(stats.totalLikes) / Number(stats.totalViews)) * 100
      : 0;

  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-5 reels (–º–µ–Ω—å—à–µ –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–π –≤–µ—Ä—Å–∏–∏)
  const topReels = await db
    .select({
      authorUsername: reelsTable.author_username,
      viewsCount: reelsTable.views_count,
      likesCount: reelsTable.likes_count,
      audioTitle: reelsTable.audio_title,
    })
    .from(reelsTable)
    .where(eq(reelsTable.project_id, projectId))
    .orderBy(desc(reelsTable.views_count))
    .limit(5);

  // –°–æ–∑–¥–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –æ—Ç—á–µ—Ç (–±–µ–∑ —Å—Å—ã–ª–æ–∫ –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)
  const reportContent = `# üìä –ê–ù–ê–õ–ò–ó –†–´–ù–ö–ê –≠–°–¢–ï–¢–ò–ß–ï–°–ö–û–ô –ú–ï–î–ò–¶–ò–ù–´

## üéØ –û–ë–ó–û–† –ò–ù–î–£–°–¢–†–ò–ò

**–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:** ${new Date().toLocaleDateString("ru-RU")}  
**–°—Ñ–µ—Ä–∞:** ${projectInfo.industry || "–≠—Å—Ç–µ—Ç–∏—á–µ—Å–∫–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞"}

---

## üìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–´–ù–ö–ê

- üé¨ **–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:** ${formatNumber(Number(stats.totalReels || 0))} –ø—É–±–ª–∏–∫–∞—Ü–∏–π
- üëÄ **–û–±—â–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Number(stats.totalViews || 0))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
- ‚ù§Ô∏è **–û–±—â–µ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ:** ${formatNumber(Number(stats.totalLikes || 0))} –ª–∞–π–∫–æ–≤
- üìä **–°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(Math.round(Number(stats.avgViews || 0)))} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é
- üí´ **–°—Ä–µ–¥–Ω–∏–π Engagement Rate:** ${formatPercent(totalEngagementRate)}
- üë• **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤:** ${competitorStats.length} –æ—Å–Ω–æ–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä—ã–Ω–∫–∞

---

## üèÜ –†–ï–ô–¢–ò–ù–ì –£–ß–ê–°–¢–ù–ò–ö–û–í –†–´–ù–ö–ê

${competitorStats
  .map((competitor, index) => {
    const reelsCount = Number(competitor.reelsCount || 0);
    const totalViews = Number(competitor.totalViews || 0);
    const totalLikes = Number(competitor.totalLikes || 0);
    const avgViews = Math.round(Number(competitor.avgViews || 0));
    const maxViews = Number(competitor.maxViews || 0);
    const engagementRate = totalViews > 0 ? (totalLikes / totalViews) * 100 : 0;
    const maskedName = maskCompetitorName(competitor.username || "–£—á–∞—Å—Ç–Ω–∏–∫");

    return `### ${index + 1}. –£—á–∞—Å—Ç–Ω–∏–∫ "${maskedName}"

- üé¨ **–ü—É–±–ª–∏–∫–∞—Ü–∏–π:** ${formatNumber(reelsCount)}
- üëÄ **–û–±—â–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(totalViews)}
- ‚ù§Ô∏è **–û–±—â–µ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ:** ${formatNumber(totalLikes)}
- üìä **–°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç:** ${formatNumber(avgViews)}
- üî• **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ—Ö–≤–∞—Ç:** ${formatNumber(maxViews)}
- üí´ **ER:** ${formatPercent(engagementRate)}`;
  })
  .join("\n\n")}

---

## üî• –¢–û–ü-5 –°–ê–ú–û–ì–û –ü–û–ü–£–õ–Ø–†–ù–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê

${topReels
  .filter((reel) => reel.viewsCount && Number(reel.viewsCount) > 0)
  .slice(0, 5)
  .map((reel, index) => {
    const views = Number(reel.viewsCount || 0);
    const likes = Number(reel.likesCount || 0);
    const engagementRate = views > 0 ? (likes / views) * 100 : 0;
    const maskedAuthor = maskCompetitorName(reel.authorUsername || "–ê–≤—Ç–æ—Ä");

    return `### ${index + 1}. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç "${maskedAuthor}"

- üëÄ **–û—Ö–≤–∞—Ç:** ${formatNumber(views)}
- ‚ù§Ô∏è **–í–æ–≤–ª–µ—á–µ–Ω–∏–µ:** ${formatNumber(likes)}
- üí´ **ER:** ${formatPercent(engagementRate)}
- üéµ **–ê—É–¥–∏–æ:** ${reel.audioTitle || "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∞—É–¥–∏–æ"}`;
  })
  .join("\n\n")}

---

## üí° –ö–õ–Æ–ß–ï–í–´–ï –ò–ù–°–ê–ô–¢–´

### üéØ –õ–∏–¥–µ—Ä —Ä—ã–Ω–∫–∞:
–£—á–∞—Å—Ç–Ω–∏–∫ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –æ—Ö–≤–∞—Ç–æ–º: **${formatNumber(Number(competitorStats[0]?.totalViews || 0))}** –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤

### üìä –ë–µ–Ω—á–º–∞—Ä–∫–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏:
- –°—Ä–µ–¥–Ω–∏–π ER –ø–æ —Ä—ã–Ω–∫—É: **${formatPercent(totalEngagementRate)}**
- –°—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: **${formatNumber(Math.round(Number(stats.avgViews || 0)))}**

### üî• –¢—Ä–µ–Ω–¥—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞:
- –°–∞–º–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞–±—Ä–∞–ª–∞: **${formatNumber(Number(topReels[0]?.viewsCount || 0))}** –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
- –¢–æ–ø-–∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç ER: **${topReels[0] ? formatPercent(Number(topReels[0].viewsCount) > 0 ? (Number(topReels[0].likesCount) / Number(topReels[0].viewsCount)) * 100 : 0) : "0.00%"}**

---

## üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –£–ß–ê–°–¢–ù–ò–ö–û–í –†–´–ù–ö–ê

### üéØ –î–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –æ—Ö–≤–∞—Ç–∞:
1. **–ò–∑—É—á–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ª–∏–¥–µ—Ä–æ–≤** - –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥—Ö–æ–¥—ã —Ç–æ–ø-–∏–≥—Ä–æ–∫–æ–≤
2. **–§–æ–∫—É—Å –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞** - —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ—Ä—ã–Ω–æ—á–Ω—ã—Ö
3. **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç—Ä–µ–Ω–¥–æ–≤** - –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∏ —Ç–µ–º—ã

### üìà –î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è:
1. **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è ER** - —Ü–µ–ª—å –ø—Ä–µ–≤—ã—Å–∏—Ç—å —Å—Ä–µ–¥–Ω–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å ${formatPercent(totalEngagementRate)}
2. **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤** - —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —É—Å–ø–µ—à–Ω—ã–º–∏ –ø–æ–¥—Ö–æ–¥–∞–º–∏
3. **–ê–Ω–∞–ª–∏–∑ –∞—É–¥–∏—Ç–æ—Ä–∏–∏** - –ø–æ–Ω–∏–º–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã

---

## üìä –ú–ï–¢–û–î–û–õ–û–ì–ò–Ø

–î–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∏–∑—É—á–µ–Ω–∏–∏ ${formatNumber(Number(stats.totalReels || 0))} –ø—É–±–ª–∏–∫–∞—Ü–∏–π –æ—Ç ${competitorStats.length} –∫–ª—é—á–µ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä—ã–Ω–∫–∞ —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã. –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å –º–µ—Ç—Ä–∏–∫–∏ –æ—Ö–≤–∞—Ç–∞, –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –∏ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–µ—Ä–∏–æ–¥.

---

*–û—Ç—á–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω: ${new Date().toLocaleString("ru-RU")}*  
*–°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date(Date.now() + 24 * 60 * 60 * 1000).toLocaleDateString("ru-RU")}*

---

**üìà –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã**`;

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –æ—Ç—á–µ—Ç
  fs.mkdirSync(publicReportsPath, { recursive: true });

  const reportFileName = `market-analysis-${new Date().toISOString().split("T")[0]}.md`;
  const reportFilePath = path.join(publicReportsPath, reportFileName);

  fs.writeFileSync(reportFilePath, reportContent, "utf8");

  // –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º HTML –≤–µ—Ä—Å–∏—é –¥–ª—è –≤–µ–±-–ø—É–±–ª–∏–∫–∞—Ü–∏–∏
  const htmlContent = `<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; padding: 20px; }
        h1, h2, h3 { color: #2c3e50; }
        .stats { background: #f8f9fa; padding: 15px; border-radius: 8px; margin: 20px 0; }
        .competitor { background: #fff; border: 1px solid #e9ecef; padding: 15px; margin: 10px 0; border-radius: 8px; }
        .metric { display: inline-block; margin: 5px 10px 5px 0; }
        .footer { text-align: center; color: #6c757d; margin-top: 40px; font-size: 0.9em; }
    </style>
</head>
<body>
${reportContent
  .replace(/^# /gm, "<h1>")
  .replace(/^## /gm, "</h1><h2>")
  .replace(/^### /gm, "</h2><h3>")
  .replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>")
  .replace(/- /g, '<div class="metric">‚Ä¢ ')
  .replace(/\n\n/g, '</div></div><div class="stats">')
  .replace(/---/g, "</div><hr>")}
<div class="footer">
    <p>–î–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –ø—É–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</p>
</div>
</body>
</html>`;

  const htmlFileName = `market-analysis-${new Date().toISOString().split("T")[0]}.html`;
  const htmlFilePath = path.join(publicReportsPath, htmlFileName);

  fs.writeFileSync(htmlFilePath, htmlContent, "utf8");

  console.log(`‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω:`);
  console.log(`   üìÑ Markdown: ${reportFileName}`);
  console.log(`   üåê HTML: ${htmlFileName}`);
  console.log(`   üìÅ –ü—É—Ç—å: ${publicReportsPath}`);
  console.log(`üìä –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä—ã–Ω–∫–∞: ${competitorStats.length}`);
  console.log(`üé¨ –ü—É–±–ª–∏–∫–∞—Ü–∏–π: ${formatNumber(Number(stats.totalReels || 0))}`);

  await closeDBConnection();
}

main().catch(async (err) => {
  console.error("‚ùå –û—à–∏–±–∫–∞:", err);
  await closeDBConnection();
});
