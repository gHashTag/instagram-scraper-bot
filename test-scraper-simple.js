/**
 * üöÄ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∫—Ä–∞–ø–µ—Ä–∞
 */

require('dotenv').config();

async function testScraper() {
  console.log('üöÄ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –°–ö–†–ê–ü–ï–†–ê');
  console.log('========================\n');

  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
  console.log('üîç –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  console.log(`DATABASE_URL: ${process.env.DATABASE_URL ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'}`);
  console.log(`APIFY_TOKEN: ${process.env.APIFY_TOKEN ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'}`);

  if (!process.env.APIFY_TOKEN) {
    console.log('‚ùå APIFY_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  // 2. –¢–µ—Å—Ç Apify API
  console.log('\nüï∑Ô∏è –¢–µ—Å—Ç Apify API:');
  
  try {
    const response = await fetch(`https://api.apify.com/v2/acts/apify~instagram-scraper/run-sync-get-dataset-items?token=${process.env.APIFY_TOKEN}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        hashtags: ['botox'], // –ü—Ä–æ—Å—Ç–æ–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —Ö—ç—à—Ç–µ–≥
        resultsLimit: 5, // –¢–æ–ª—å–∫–æ 5 –¥–ª—è —Ç–µ—Å—Ç–∞
        proxy: {
          useApifyProxy: true,
          apifyProxyGroups: ["RESIDENTIAL"]
        }
      })
    });

    console.log(`–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);

    if (!response.ok) {
      const errorText = await response.text();
      console.log(`‚ùå –û—à–∏–±–∫–∞ HTTP: ${errorText}`);
      return;
    }

    const data = await response.json();
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${Array.isArray(data) ? data.length : '–Ω–µ –º–∞—Å—Å–∏–≤'}`);

    if (Array.isArray(data) && data.length > 0) {
      console.log('\nüìä –ü—Ä–∏–º–µ—Ä—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:');
      
      data.slice(0, 3).forEach((reel, index) => {
        const views = reel.videoViewCount || reel.viewCount || 0;
        const author = reel.ownerUsername || reel.author || 'Unknown';
        const url = reel.url || reel.shortCode || 'No URL';
        
        console.log(`${index + 1}. @${author}`);
        console.log(`   –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${views.toLocaleString()}`);
        console.log(`   URL: ${url}`);
        console.log(`   –¢–∏–ø: ${reel.type || 'unknown'}`);
      });

      // –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
      console.log('\nüéØ –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞:');
      
      const viralReels = data.filter(reel => {
        const views = reel.videoViewCount || reel.viewCount || 0;
        return views >= 50000;
      });
      
      const recentReels = data.filter(reel => {
        if (!reel.timestamp) return false;
        const publishedDate = new Date(reel.timestamp);
        const daysAgo = (new Date() - publishedDate) / (1000 * 60 * 60 * 24);
        return daysAgo <= 14;
      });

      console.log(`–í–∏—Ä—É—Å–Ω—ã–µ (50K+): ${viralReels.length} –∏–∑ ${data.length}`);
      console.log(`–ó–∞ 14 –¥–Ω–µ–π: ${recentReels.length} –∏–∑ ${data.length}`);
      
      // –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
      if (viralReels.length > 0 && recentReels.length > 0) {
        console.log('\nüéâ –û–¢–õ–ò–ß–ù–û! –°–∫—Ä–∞–ø–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –Ω–∞—Ö–æ–¥–∏—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        console.log('‚úÖ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–ª–Ω—ã–π —Å–∫—Ä–∞–ø–∏–Ω–≥');
        
        console.log('\nüöÄ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
        console.log('npx tsx src/scripts/bulk-scrape-hashtags.ts 1 $APIFY_TOKEN 14 50000 50');
        console.log('npx tsx src/scripts/bulk-scrape-competitors.ts 1 $APIFY_TOKEN 1 50');
        
      } else if (data.length > 0) {
        console.log('\nüü° –•–û–†–û–®–û! –°–∫—Ä–∞–ø–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –º–∞–ª–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
        console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
        console.log('   - –°–Ω–∏–∑–∏—Ç—å minViews –¥–æ 10000');
        console.log('   - –£–≤–µ–ª–∏—á–∏—Ç—å maxAgeDays –¥–æ 30');
        console.log('   - –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ö—ç—à—Ç–µ–≥–∏');
        
      } else {
        console.log('\nüî¥ –ü–†–û–ë–õ–ï–ú–ê! –°–∫—Ä–∞–ø–µ—Ä –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç –¥–∞–Ω–Ω—ã–µ');
      }

    } else {
      console.log('‚ùå Apify –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
      console.log('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('   - –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω');
      console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Ö—ç—à—Ç–µ–≥–æ–º');
      console.log('   - –õ–∏–º–∏—Ç—ã Instagram');
    }

  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: ${error.message}`);
    console.log('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('   - –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
    console.log('   - –ù–µ–≤–µ—Ä–Ω—ã–π APIFY_TOKEN');
    console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å fetch API');
  }

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
  if (process.env.DATABASE_URL) {
    console.log('\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
    
    try {
      const { neon } = require('@neondatabase/serverless');
      const sql = neon(process.env.DATABASE_URL);
      
      const result = await sql`SELECT COUNT(*) as count FROM reels`;
      console.log(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ`);
      console.log(`üìä Reels –≤ –±–∞–∑–µ: ${result[0].count}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ
      const recent = await sql`
        SELECT author_username, views_count, created_at 
        FROM reels 
        ORDER BY created_at DESC 
        LIMIT 3
      `;
      
      if (recent.length > 0) {
        console.log('üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ:');
        recent.forEach((reel, index) => {
          const createdDate = new Date(reel.created_at).toLocaleDateString();
          console.log(`${index + 1}. @${reel.author_username} - ${reel.views_count?.toLocaleString() || 'N/A'} (${createdDate})`);
        });
      }
      
    } catch (dbError) {
      console.log(`‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –ë–î: ${dbError.message}`);
    }
  }

  console.log('\nüìã –ò–¢–û–ì –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');
  console.log('====================');
  console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ APIFY_TOKEN –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
  console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Ö—ç—à—Ç–µ–≥–∏ –≤ –ë–î');
  console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∞–ø–∏–Ω–≥ —Å –º–∞–ª—ã–º–∏ –ª–∏–º–∏—Ç–∞–º–∏');
  console.log('4. –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –æ–±—ä–µ–º—ã');
}

testScraper().catch(console.error);
