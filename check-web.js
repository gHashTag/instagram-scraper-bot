/**
 * üåê –ü–†–û–í–ï–†–ö–ê –í–ï–ë-–°–ï–†–í–ï–†–ê
 */

const fs = require('fs');
const https = require('https');

function log(message) {
  const timestamp = new Date().toLocaleTimeString();
  const logMessage = `[${timestamp}] ${message}\n`;
  fs.appendFileSync('web-check.log', logMessage);
  console.log(logMessage.trim());
}

function checkUrl(url, name) {
  return new Promise((resolve) => {
    log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º ${name}: ${url}`);
    
    const req = https.get(url, (res) => {
      log(`‚úÖ ${name}: —Å—Ç–∞—Ç—É—Å ${res.statusCode}`);
      
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        log(`üìä ${name}: –ø–æ–ª—É—á–µ–Ω–æ ${data.length} –±–∞–π—Ç`);
        if (data.length > 0) {
          log(`üìù ${name}: –ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: ${data.substring(0, 100)}`);
        }
        resolve(true);
      });
    });
    
    req.on('error', (error) => {
      log(`‚ùå ${name}: –æ—à–∏–±–∫–∞ ${error.message}`);
      resolve(false);
    });
    
    req.setTimeout(10000, () => {
      log(`‚è∞ ${name}: —Ç–∞–π–º–∞—É—Ç`);
      req.destroy();
      resolve(false);
    });
  });
}

async function checkWeb() {
  log('üöÄ –ü–†–û–í–ï–†–ö–ê –í–ï–ë-–°–ï–†–í–ò–°–û–í');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ URL
  await checkUrl('https://instagram-scraper-bot.vercel.app/', '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
  await checkUrl('https://instagram-scraper-bot.vercel.app/health', 'Health check');
  await checkUrl('https://instagram-scraper-bot.vercel.app/api/reels?limit=1', 'API reels');
  await checkUrl('https://instagram-scraper-bot.vercel.app/api/competitors', 'API competitors');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã
  await checkUrl('https://httpbin.org/get', '–¢–µ—Å—Ç —Å–µ—Ç–∏');
  
  log('üéØ –ü–†–û–í–ï–†–ö–ê –í–ï–ë –ó–ê–í–ï–†–®–ï–ù–ê');
}

checkWeb();
