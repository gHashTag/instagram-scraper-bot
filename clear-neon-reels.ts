/**
 * üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö reels –∏–∑ Neon Database
 */

import { neon } from '@neondatabase/serverless';
import dotenv from 'dotenv';
dotenv.config();

async function clearNeonReels() {
  console.log('üóëÔ∏è –û–ß–ò–°–¢–ö–ê –í–°–ï–• REELS –ò–ó NEON DATABASE');
  console.log('====================================\n');

  if (!process.env.DATABASE_URL) {
    console.log('‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
    return;
  }

  console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Neon Database...');
  const sql = neon(process.env.DATABASE_URL);

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ reels –¥–æ —É–¥–∞–ª–µ–Ω–∏—è
    console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è...');
    const beforeResult = await sql`SELECT COUNT(*) FROM reels`;
    const beforeCount = beforeResult[0].count;
    console.log(`üìä Reels –≤ –±–∞–∑–µ –¥–æ –æ—á–∏—Å—Ç–∫–∏: ${beforeCount}`);
    
    if (beforeCount === 0) {
      console.log('‚úÖ –ë–∞–∑–∞ —É–∂–µ –ø—É—Å—Ç–∞—è - –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å');
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã
    console.log('\nüîç –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã:');
    const examples = await sql`
      SELECT author_username, views_count, source_type, published_at 
      FROM reels 
      ORDER BY views_count DESC 
      LIMIT 5
    `;
    
    examples.forEach((reel, index) => {
      const publishedDate = reel.published_at ? new Date(reel.published_at).toLocaleDateString() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
      console.log(`${index + 1}. @${reel.author_username} - ${reel.views_count?.toLocaleString() || 'N/A'} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ (${reel.source_type}) - ${publishedDate}`);
    });
    
    // –£–¥–∞–ª—è–µ–º –í–°–ï reels
    console.log('\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö reels...');
    const deleteResult = await sql`DELETE FROM reels`;
    console.log(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∞–∑–∞ –ø—É—Å—Ç–∞—è
    const afterResult = await sql`SELECT COUNT(*) FROM reels`;
    const afterCount = afterResult[0].count;
    console.log(`üìä Reels –≤ –±–∞–∑–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: ${afterCount}`);
    
    if (afterCount === 0) {
      console.log('\nüéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ü–û–õ–ù–û–°–¢–¨–Æ –û–ß–ò–©–ï–ù–ê!');
      console.log('‚úÖ –ì–æ—Ç–æ–≤–∞ –¥–ª—è —Å–≤–µ–∂–µ–≥–æ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∞–±–ª–∏—Ü
      console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥—Ä—É–≥–∏—Ö —Ç–∞–±–ª–∏—Ü:');
      const competitorsResult = await sql`SELECT COUNT(*) FROM competitors`;
      const hashtagsResult = await sql`SELECT COUNT(*) FROM hashtags`;
      const projectsResult = await sql`SELECT COUNT(*) FROM projects`;
      
      console.log(`üè¢ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã: ${competitorsResult[0].count}`);
      console.log(`üè∑Ô∏è –•—ç—à—Ç–µ–≥–∏: ${hashtagsResult[0].count}`);
      console.log(`üìÅ –ü—Ä–æ–µ–∫—Ç—ã: ${projectsResult[0].count}`);
      
    } else {
      console.log('\n‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å reels –≤ –±–∞–∑–µ - –≤–æ–∑–º–æ–∂–Ω–∞ –æ—à–∏–±–∫–∞');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã:', error.message);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error);
  }
}

clearNeonReels().catch(console.error);
