#!/usr/bin/env node

/**
 * CLI —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫—Ä–∞–ø–∏–Ω–≥–∞ Instagram —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
 * 
 * –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
 * npm run scrape-strategy viral aesthetics 50000
 * npm run scrape-strategy popular beauty 10000
 * npm run scrape-strategy test skincare 1000
 */

import { InstagramStrategy } from "../strategy/instagram-strategy";
import { ScrapingMode } from "../types/instagram-strategy";
import { logger } from "../logger";

// –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞–±–æ—Ä—ã —Ö—ç—à—Ç–µ–≥–æ–≤
const HASHTAG_SETS = {
  aesthetics: [
    "aestheticclinic", "aestheticmedicine", "aesthetictreatment", 
    "botox", "dermalfillers", "antiaging"
  ],
  beauty: [
    "skincare", "skinrejuvenation", "hydrafacial", 
    "prpfacial", "rfmicroneedling"
  ],
  skincare: [
    "skincare", "glowingskin", "healthyskin", 
    "skincareproducts", "skincareroutine"
  ],
  medical: [
    "medicalaesthetics", "cosmeticdermatology", "plasticsurgery",
    "nonsurgical", "injectables"
  ]
};

// –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã
const COMPETITOR_SETS = {
  aesthetics: [
    "competitor1", "competitor2", "competitor3"
  ],
  beauty: [
    "beautycompetitor1", "beautycompetitor2"
  ]
};

function printUsage() {
  console.log(`
üïâÔ∏è Instagram Scraping Strategy CLI

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
  npm run scrape-strategy <—Ä–µ–∂–∏–º> <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> [–º–∏–Ω–ü—Ä–æ—Å–º–æ—Ç—Ä—ã] [–ª–∏–º–∏—Ç]

–†–ï–ñ–ò–ú–´:
  viral    - –í–∏—Ä—É—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç (50K+ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, 7 –¥–Ω–µ–π, —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã)
  popular  - –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç (10K+ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, 30 –¥–Ω–µ–π, –≤–∫–ª—é—á–∞—è –æ—Ü–µ–Ω–∫–∏ –ø–æ –ª–∞–π–∫–∞–º)
  normal   - –û–±—ã—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç (1K+ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, 30 –¥–Ω–µ–π)
  test     - –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (100+ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, 90 –¥–Ω–µ–π)

–ö–ê–¢–ï–ì–û–†–ò–ò:
  aesthetics - –≠—Å—Ç–µ—Ç–∏—á–µ—Å–∫–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞
  beauty     - –ö—Ä–∞—Å–æ—Ç–∞ –∏ —É—Ö–æ–¥
  skincare   - –£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π
  medical    - –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è

–ü–†–ò–ú–ï–†–´:
  npm run scrape-strategy viral aesthetics
  npm run scrape-strategy popular beauty 15000
  npm run scrape-strategy test skincare 500 50
  `);
}

function parseArguments() {
  const args = process.argv.slice(2);
  
  if (args.length < 2) {
    printUsage();
    process.exit(1);
  }

  const mode = args[0] as ScrapingMode;
  const category = args[1];
  const minViews = args[2] ? parseInt(args[2]) : undefined;
  const limit = args[3] ? parseInt(args[3]) : undefined;

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ–∂–∏–º–∞
  const validModes: ScrapingMode[] = ["viral", "popular", "normal", "test"];
  if (!validModes.includes(mode)) {
    logger.error(`‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º: ${mode}`);
    logger.error(`‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: ${validModes.join(", ")}`);
    process.exit(1);
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const validCategories = Object.keys(HASHTAG_SETS);
  if (!validCategories.includes(category)) {
    logger.error(`‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${category}`);
    logger.error(`‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${validCategories.join(", ")}`);
    process.exit(1);
  }

  return { mode, category, minViews, limit };
}

async function main() {
  try {
    logger.info("üïâÔ∏è –ó–ê–ü–£–°–ö INSTAGRAM SCRAPING STRATEGY");
    
    const { mode, category, minViews, limit } = parseArguments();
    
    // –ü–æ–ª—É—á–∞–µ–º —Ö—ç—à—Ç–µ–≥–∏ –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const hashtags = HASHTAG_SETS[category] || [];
    const competitors = COMPETITOR_SETS[category] || [];
    
    logger.info(`üìä –ü–ê–†–ê–ú–ï–¢–†–´ –°–¢–†–ê–¢–ï–ì–ò–ò:`);
    logger.info(`  üéØ –†–µ–∂–∏–º: ${mode}`);
    logger.info(`  üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${category}`);
    logger.info(`  üè∑Ô∏è –•—ç—à—Ç–µ–≥–∏: ${hashtags.join(", ")}`);
    logger.info(`  üè¢ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã: ${competitors.join(", ")}`);
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
    let strategy: InstagramStrategy;
    
    switch (mode) {
      case "viral":
        strategy = InstagramStrategy.createViralStrategy(hashtags, competitors);
        break;
      case "popular":
        strategy = InstagramStrategy.createPopularStrategy(hashtags, competitors);
        break;
      case "test":
        strategy = InstagramStrategy.createTestStrategy(hashtags, competitors);
        break;
      default:
        strategy = InstagramStrategy.fromMode(mode, { hashtags, competitors });
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const config = strategy.getConfig();
    if (minViews !== undefined) {
      config.filters.minViews = minViews;
      logger.info(`  üëÅÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${minViews}`);
    }
    if (limit !== undefined) {
      config.limits.totalLimit = limit;
      logger.info(`  üî¢ –õ–∏–º–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${limit}`);
    }
    
    logger.info(`\nüîß –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–¢–†–ê–¢–ï–ì–ò–ò:`);
    logger.info(`  üìà –ú–∏–Ω. –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${config.filters.minViews}`);
    logger.info(`  üìÖ –ú–∞–∫—Å. –≤–æ–∑—Ä–∞—Å—Ç: ${config.filters.maxAgeDays} –¥–Ω–µ–π`);
    logger.info(`  ‚úÖ –¢–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${config.filters.requireRealViews}`);
    logger.info(`  üéØ –û–±—â–∏–π –ª–∏–º–∏—Ç: ${config.limits.totalLimit}`);
    logger.info(`  üìä –õ–∏–º–∏—Ç –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: ${config.limits.perSourceLimit}`);
    logger.info(`  üîß –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∞–ø–µ—Ä: ${config.scrapers.primary}`);
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞
    logger.info(`\nüöÄ –ó–ê–ü–£–°–ö –°–ö–†–ê–ü–ò–ù–ì–ê...`);
    logger.info(`‚ö†Ô∏è –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° –°–£–©–ï–°–¢–í–£–Æ–©–ò–ú–ò –°–ö–†–ò–ü–¢–ê–ú–ò –í –†–ê–ó–†–ê–ë–û–¢–ö–ï`);
    
    // –ü—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
    logger.info(`\nüí° –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:`);
    logger.info(`1. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å src/agent/instagram-scraper.ts`);
    logger.info(`2. –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º`);
    logger.info(`3. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö`);
    logger.info(`4. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ Excel (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)`);
    
    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    const samplePosts = [
      { videoViewCount: 75000, likesCount: 5000, timestamp: new Date().toISOString() },
      { videoViewCount: 25000, likesCount: 1500, timestamp: new Date().toISOString() },
      { likesCount: 4000, timestamp: new Date().toISOString() }, // –ë–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
    ];
    
    logger.info(`\nüß™ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –§–ò–õ–¨–¢–†–ê–¶–ò–ò:`);
    logger.info(`üì• –í—Ö–æ–¥—è—â–∏–µ –ø–æ—Å—Ç—ã: ${samplePosts.length}`);
    
    const filteredPosts = strategy.applyFilters(samplePosts);
    logger.info(`üì§ –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ${filteredPosts.length}`);
    
    filteredPosts.forEach((post, index) => {
      const views = post.videoViewCount || (post.likesCount ? post.likesCount * 15 : 0);
      logger.info(`  ‚úÖ –ü–æ—Å—Ç ${index + 1}: ${views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤`);
    });
    
    logger.info(`\nüéâ –°–¢–†–ê–¢–ï–ì–ò–Ø –ì–û–¢–û–í–ê –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!`);
    
  } catch (error) {
    logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:", error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main();
