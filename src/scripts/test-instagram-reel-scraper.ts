/**
 * –¢–µ—Å—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ Instagram Reel Scraper (apify/instagram-reel-scraper)
 * –ò–º–µ–Ω–Ω–æ –¥–ª—è Reels, –∞ –Ω–µ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
 */

import { ApifyClient } from "apify-client";
import dotenv from "dotenv";

dotenv.config();

const args = process.argv.slice(2);
const username = args[0] || "med_yu_med";
const apifyToken = process.env.APIFY_TOKEN;

if (!apifyToken) {
  console.error("APIFY_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è");
  process.exit(1);
}

async function testInstagramReelScraper() {
  console.log(`üé¨ –¢–µ—Å—Ç Instagram Reel Scraper –¥–ª—è: ${username}`);
  console.log(`üîë –¢–æ–∫–µ–Ω: ${apifyToken}`);

  const client = new ApifyClient({ token: apifyToken });

  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Instagram Reel Scraper
    const run = await client.actor("apify/instagram-reel-scraper").call({
      username: [username],
      resultsLimit: 20,
    });

    console.log(`‚úÖ Instagram Reel Scraper –∑–∞–ø—É—â–µ–Ω, ID: ${run.id}`);

    const { items } = await client.dataset(run.defaultDatasetId).listItems();

    console.log(`üìä –ü–û–õ–£–ß–ï–ù–û –≠–õ–ï–ú–ï–ù–¢–û–í: ${items.length}`);

    if (items.length > 0) {
      console.log(`\nüé¨ –ü–ï–†–í–´–ô REEL:`);
      const firstReel = items[0];

      console.log(`- ID: ${firstReel.id || "–Ω–µ —É–∫–∞–∑–∞–Ω"}`);
      console.log(`- –¢–∏–ø: ${firstReel.type || "–Ω–µ —É–∫–∞–∑–∞–Ω"}`);
      console.log(`- URL: ${firstReel.url || "–Ω–µ —É–∫–∞–∑–∞–Ω"}`);
      console.log(`- –ö–æ–¥: ${firstReel.shortCode || "–Ω–µ —É–∫–∞–∑–∞–Ω"}`);
      console.log(`- –î–∞—Ç–∞: ${firstReel.timestamp || "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"}`);
      console.log(`- –õ–∞–π–∫–∏: ${firstReel.likesCount || "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"}`);
      console.log(
        `- –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${firstReel.videoViewCount || firstReel.playCount || "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"}`
      );
      console.log(`- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${firstReel.commentsCount || "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"}`);
      console.log(`- –í–ª–∞–¥–µ–ª–µ—Ü: ${firstReel.ownerUsername || "–Ω–µ —É–∫–∞–∑–∞–Ω"}`);
      console.log(
        `- –û–ø–∏—Å–∞–Ω–∏–µ: ${firstReel.caption ? firstReel.caption.substring(0, 100) + "..." : "–Ω–µ—Ç"}`
      );

      console.log(`\nüé• –í–°–ï REELS:`);
      items.forEach((reel, i) => {
        console.log(`${i + 1}. ${reel.url || reel.shortCode}`);
        console.log(`   –õ–∞–π–∫–∏: ${reel.likesCount || "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"}`);
        console.log(
          `   –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${reel.videoViewCount || reel.playCount || "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"}`
        );
        console.log(`   –î–∞—Ç–∞: ${reel.timestamp}`);
        console.log("");
      });

      // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      const totalViews = items.reduce((sum, reel) => {
        const views =
          reel.videoViewCount || reel.playCount || reel.likesCount || 0;
        return sum + (typeof views === "number" ? views : parseInt(views) || 0);
      }, 0);

      const avgViews = Math.round(totalViews / items.length);
      const maxViews = Math.max(
        ...items.map((reel) => {
          const views =
            reel.videoViewCount || reel.playCount || reel.likesCount || 0;
          return typeof views === "number" ? views : parseInt(views) || 0;
        })
      );

      console.log(`üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`);
      console.log(`   –í—Å–µ–≥–æ Reels: ${items.length}`);
      console.log(`   –û–±—â–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${totalViews.toLocaleString()}`);
      console.log(`   –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${avgViews.toLocaleString()}`);
      console.log(`   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${maxViews.toLocaleString()}`);

      // –ù–∞–π–¥–µ–º reels —Å –≤—ã—Å–æ–∫–∏–º–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º–∏
      const viralReels = items.filter((reel) => {
        const views =
          reel.videoViewCount || reel.playCount || reel.likesCount || 0;
        const viewCount =
          typeof views === "number" ? views : parseInt(views) || 0;
        return viewCount >= 5000;
      });

      console.log(`\nüî• –í–ò–†–£–°–ù–´–ï REELS (5K+ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤): ${viralReels.length}`);
      viralReels.forEach((reel, i) => {
        const views =
          reel.videoViewCount || reel.playCount || reel.likesCount || 0;
        const viewCount =
          typeof views === "number" ? views : parseInt(views) || 0;
        console.log(
          `${i + 1}. ${viewCount.toLocaleString()} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ - ${reel.url || reel.shortCode}`
        );
      });
    } else {
      console.log(`‚ùå –ù–ï–¢ –î–ê–ù–ù–´–• –û–¢ Instagram Reel Scraper`);
    }
  } catch (error) {
    console.error(`‚ùå –û–®–ò–ë–ö–ê:`, error);
  }
}

testInstagramReelScraper().catch(console.error);
