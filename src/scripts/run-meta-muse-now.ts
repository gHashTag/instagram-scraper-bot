/**
 * üïâÔ∏è –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ Meta Muse Scraper - –°–ï–ô–ß–ê–°!
 *
 * **"‡§µ‡§æ‡§Ø‡•Å‡§∞‡•ç‡§Ø‡§•‡§æ ‡§¨‡§®‡•ç‡§ß‡§Ç ‡§®‡•ã‡§ú‡•ç‡§ú‡§ø‡§π‡•Ä‡§∞‡•ç‡§∑‡§§‡§ø ‡§∏ ‡§è‡§ï‡•ã ‡§¨‡•Å‡§¶‡•ç‡§ß‡§∏‡•ç‡§§‡§§‡•ç‡§∞ ‡§Ø‡•Å‡§ï‡•ç‡§§‡§Æ‡•ç"**
 * "–ö–∞–∫ –≤–µ—Ç–µ—Ä –Ω–µ —Å—Ç—Ä–µ–º–∏—Ç—Å—è —Ä–∞–∑—Ä—É—à–∏—Ç—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è, —Ç–∞–∫ –∏ –º—É–¥—Ä—ã–π –Ω–µ —Å–ø–µ—à–∏—Ç - –æ–Ω –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤ –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç"
 */

import { MetaMuseAutomatedScraper } from "./meta-muse-automated-scraper";
import dotenv from "dotenv";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

async function runMetaMuseNow() {
  console.log(`üïâÔ∏è –ù–ï–ú–ï–î–õ–ï–ù–ù–´–ô –ó–ê–ü–£–°–ö Meta Muse Scraper`);
  console.log(`‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê`);
  console.log(`üê≠ –ê–Ω–∏–º–µ –º—ã—à—å –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!`);
  console.log(`üìÖ –î–∞—Ç–∞: ${new Date().toLocaleString()}`);
  console.log(`üÜî Project ID: 999`);

  try {
    const scraper = new MetaMuseAutomatedScraper();
    await scraper.run();

    console.log(`\nüéâ Meta Muse Scraper –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ! üê≠‚ö°`);
    console.log(`üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—á–µ—Ç—ã –≤ –ø–∞–ø–∫–µ exports/`);
  } catch (error) {
    console.error(`\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:`, error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
runMetaMuseNow().catch((error) => {
  console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:", error);
  process.exit(1);
});
