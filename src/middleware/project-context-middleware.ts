/**
 * Middleware –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞
 * –î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
 */

import { Context, MiddlewareFn } from "telegraf";
import { projectContextService } from "../services/project-context-service";
import { logger } from "../utils/logger";
import { ScraperBotContext } from "../types";

// –†–∞—Å—à–∏—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç Telegraf –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ
declare module "../types" {
  interface ScraperBotContext {
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ
    selectedProject?: {
      id: number;
      name: string;
      userId: string;
      selectedAt: Date;
    } | null;

    // –£–¥–æ–±–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–∞
    projectContext: {
      get(): {
        id: number;
        name: string;
        userId: string;
        selectedAt: Date;
      } | null;
      set(projectId: number, projectName: string, userId: string): void;
      clear(): void;
      has(): boolean;
      getId(): number | null;
      getName(): string | null;
      requireProject(): {
        id: number;
        name: string;
        userId: string;
        selectedAt: Date;
      };
    };
  }
}

/**
 * Middleware –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞
 */
export const projectContextMiddleware: MiddlewareFn<ScraperBotContext> = (
  ctx,
  next
) => {
  const telegramId = ctx.from?.id;

  if (!telegramId) {
    logger.warn("[ProjectContextMiddleware] –ù–µ—Ç Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    return next();
  }

  // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const selectedProject = projectContextService.getSelectedProject(telegramId);

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
  ctx.selectedProject = selectedProject;

  // –î–æ–±–∞–≤–ª—è–µ–º —É–¥–æ–±–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–∞
  ctx.projectContext = {
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ
     */
    get(): {
      id: number;
      name: string;
      userId: string;
      selectedAt: Date;
    } | null {
      return projectContextService.getSelectedProject(telegramId);
    },

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
     */
    set(projectId: number, projectName: string, userId: string): void {
      projectContextService.setSelectedProject(
        telegramId,
        projectId,
        projectName,
        userId
      );
      // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
      ctx.selectedProject =
        projectContextService.getSelectedProject(telegramId);
    },

    /**
     * –û—á–∏—Å—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
     */
    clear(): void {
      projectContextService.clearSelectedProject(telegramId);
      ctx.selectedProject = null;
    },

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
     */
    has(): boolean {
      return projectContextService.hasSelectedProject(telegramId);
    },

    /**
     * –ü–æ–ª—É—á–∏—Ç—å ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
     */
    getId(): number | null {
      return projectContextService.getSelectedProjectId(telegramId);
    },

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
     */
    getName(): string | null {
      return projectContextService.getSelectedProjectName(telegramId);
    },

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –≤—ã–±—Ä–æ—Å–∏—Ç—å –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å—Ü–µ–Ω–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
     */
    requireProject(): {
      id: number;
      name: string;
      userId: string;
      selectedAt: Date;
    } {
      const project = projectContextService.getSelectedProject(telegramId);
      if (!project) {
        throw new Error(
          "–ü—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ —Ä–∞–∑–¥–µ–ª–µ '–ü—Ä–æ–µ–∫—Ç—ã'."
        );
      }
      return project;
    },
  };

  // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  if (selectedProject) {
    logger.debug(
      `[ProjectContextMiddleware] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–æ–µ–∫—Ç–æ–º: ${selectedProject.name} (ID: ${selectedProject.id})`
    );
  } else {
    logger.debug(
      `[ProjectContextMiddleware] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} –Ω–µ –≤—ã–±—Ä–∞–ª –ø—Ä–æ–µ–∫—Ç`
    );
  }

  return next();
};

/**
 * Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å—Ü–µ–Ω–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
 */
export const requireProjectMiddleware: MiddlewareFn<ScraperBotContext> = async (
  ctx,
  next
) => {
  const telegramId = ctx.from?.id;

  if (!telegramId) {
    await ctx.reply("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
    return;
  }

  const hasProject = projectContextService.hasSelectedProject(telegramId);

  if (!hasProject) {
    await ctx.reply(
      "‚ö†Ô∏è –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç.\n\n" +
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'üìä –ü—Ä–æ–µ–∫—Ç—ã' –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç.",
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: "üìä –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–æ–µ–∫—Ç–∞–º", callback_data: "goto_projects" }],
          ],
        },
      }
    );
    return;
  }

  return next();
};

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–æ–µ–∫—Ç–∞–º"
 */
export const handleGotoProjects = async (ctx: ScraperBotContext) => {
  try {
    await ctx.answerCbQuery();
    await ctx.scene.enter("projects_menu");
  } catch (error) {
    logger.error(
      "[ProjectContextMiddleware] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –ø—Ä–æ–µ–∫—Ç–∞–º:",
      error
    );
    await ctx.reply(
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –ø—Ä–æ–µ–∫—Ç–∞–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
    );
  }
};
